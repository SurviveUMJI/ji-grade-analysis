{"version":3,"sources":["webpack:///./app/constants/todos.ts","webpack:///./app/models/TodoModel.ts","webpack:///./app/models/CourseModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/stores/CoursesStore.ts","webpack:///./app/stores/createStore.ts","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/Footer/index.tsx","webpack:///./app/containers/Root/index.tsx","webpack:///./app/containers/Main/index.tsx","webpack:///./app/constants/stores.ts","webpack:///./app/components/icons.tsx","webpack:///./app/components/CourseList/index.tsx","webpack:///./app/containers/CourseListPage/index.tsx","webpack:///./app/components/CurveChart/index.tsx","webpack:///./app/components/Lesson/index.tsx","webpack:///./app/components/Course/index.tsx","webpack:///./app/containers/CoursePage/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx"],"names":["TodoFilter","text","completed","this","id","TodoModel","generateId","nextId","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","history","courses","coursesMap","keyBy","lessonsMap","scoresMap","ALL","ACTIVE","COMPLETED","todoStore","routerStore","coursesStore","render","Grid","container","justify","Typography","component","variant","color","gutterBottom","align","namespace","props","repo","spacing","type","size","version","Link","href","target","renderDevTool","classes","className","Container","maxWidth","CssBaseline","Paper","mainFeaturedPostContent","children","RootWithStyle","withStyles","theme","createStyles","mainFeaturedPost","backgroundColor","palette","grey","common","white","marginBottom","padding","breakpoints","down","paddingRight","paddingLeft","context","state","md","paragraph","stats","scores","lessons","Button","to","Main","Add","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","title","field","cellStyle","width","sorting","router","icons","options","pageSize","pageSizeOptions","style","components","elevation","onRowClick","event","rowData","console","log","courseCode","currentHash","location","hash","nextHash","CourseList","CourseListPage","colors","BarSeriesPointBase","index","Point","restProps","PieSeriesPointBase","endAngle","Math","abs","PI","ChartRoot","chart","name","Root","chartData","getChartData","chartType","hideUnknown","hideZero","hover","tooltipTarget","totalCount","getTotalCount","CurveChart","sumBy","scoreData","count","newData","length","last","grade","slice","componentDidUpdate","prevProps","prevState","snapshot","lessonClassCode","setState","onChangeHover","onChangeTooltip","targetItem","series","key","valueField","argumentField","pointComponent","innerRadius","outerRadius","rootComponent","onHoverChange","bind","onTargetItemChange","contentComponent","pointData","point","percentage","round","grades","scoreDataMap","course","updateCourse","forEach","a","hasOwnProperty","lesson","lecturersStr","lecturers","join","studentNumStr","studentNum","toString","ensureScoreDataMap","scoreNum","temp","zip","value","componentDidMount","onChangeChartType","onChangeHideUnknown","checked","onChangeHideZero","courseNameEn","courseName","RadioGroup","onChange","row","FormControlLabel","control","Radio","label","labelPlacement","detailPanel","togglePanel","Course","match","courseStore","params","toUpperCase","available","CoursePage","App","Router","Switch","Route","exact","path","rootStore","document","getElementById"],"mappings":"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","file":"app.6035472b0bfdf4f916b4.js","sourcesContent":["export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: 'All',\n  [TodoFilter.ACTIVE]: 'Active',\n  [TodoFilter.COMPLETED]: 'Completed'\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: '#',\n  [TodoFilter.ACTIVE]: '#active',\n  [TodoFilter.COMPLETED]: '#completed'\n};\n","import { observable } from 'mobx';\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import {observable} from 'mobx';\n\nexport class ScoreModel {\n  readonly courseCode: string;\n  readonly lessonClassCode: string;\n  readonly scores: number[];\n}\n\nexport class LessonModel {\n  readonly lessonClassCode: string;\n  readonly courseCode: string;\n  readonly lessonClassName: string;\n  readonly termName: string;\n  readonly studentNum: number;\n  readonly scoreNum: number;\n  readonly lecturers: string[];\n  @observable public lecturersStr?: string;\n  @observable public studentNumStr?: string;\n}\n\nexport class CourseModel {\n  readonly courseCode: string;\n  readonly courseName: string;\n  readonly courseNameEn: string;\n  readonly lessons: Array<string[]>;\n  readonly terms: string;\n}\n\nexport default CourseModel;\n\n","import { observable, computed, action } from 'mobx';\nimport { TodoModel } from 'app/models';\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from 'history';\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore\n} from 'mobx-react-router';\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","import {observable} from 'mobx';\nimport _ from 'lodash';\n\nimport {CourseModel, LessonModel, ScoreModel} from 'app/models';\n\nimport courses from 'ji-grade-analysis-data/courses.json';\nimport lessons from 'ji-grade-analysis-data/lessons.json';\nimport scores from 'ji-grade-analysis-data/scores.json';\nimport {Dictionary} from 'lodash';\n\nexport class CoursesStore {\n\n  @observable public courses: Array<CourseModel>;\n  @observable public coursesMap: Dictionary<CourseModel>;\n  @observable public lessonsMap: Dictionary<LessonModel>;\n  @observable public scoresMap: Dictionary<ScoreModel>;\n\n  constructor() {\n    this.courses = courses;\n    this.coursesMap = _.keyBy(courses, 'courseCode');\n    this.lessonsMap = _.keyBy(lessons, 'lessonClassCode');\n    this.scoresMap = _.keyBy(scores, 'lessonClassCode');\n    /*scores.forEach(score => {\n      const courseCode = score.courseCode;\n      if (this.coursesMap.hasOwnProperty(courseCode)) {\n        if (!this.coursesMap[courseCode].hasOwnProperty('sections')) {\n          this.coursesMap[courseCode].sections = [];\n        }\n        this.coursesMap[courseCode].sections.push(score);\n        console.log(score, this.coursesMap[courseCode].sections)\n      }\n    });*/\n  }\n\n}\n","import {History} from 'history';\nimport {TodoModel} from 'app/models';\nimport {TodoStore} from './TodoStore';\nimport {RouterStore} from './RouterStore';\nimport {CoursesStore} from 'app/stores/CoursesStore';\nimport {STORE_TODO, STORE_ROUTER, STORE_COURSES} from 'app/constants';\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  const coursesStore = new CoursesStore();\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore,\n    [STORE_COURSES]: coursesStore,\n  };\n}\n","import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport {GitHubButton, GitHubButtonProvider} from 'react-github-button';\nimport 'react-github-button/assets/style.less';\n\nexport interface HeaderProps {\n  namespace: string;\n  repo: string;\n  /* empty */\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  render() {\n    return (\n      <div>\n        <Grid container justify=\"center\">\n          <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                      gutterBottom align={'center'}>\n            UM-SJTU JI Grade Analysis\n          </Typography>\n        </Grid>\n        <GitHubButtonProvider namespace={this.props.namespace}\n                              repo={this.props.repo}>\n          <Grid container justify=\"flex-end\" spacing={1}>\n            <Grid item>\n              <GitHubButton type=\"stargazers\" size=\"large\"/>\n            </Grid>\n            <Grid item>\n              <GitHubButton type=\"watchers\" size=\"large\"/>\n            </Grid>\n            <Grid item>\n              <GitHubButton type=\"forks\" size=\"large\"/>\n            </Grid>\n          </Grid>\n        </GitHubButtonProvider>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport {Grid, Link} from '@material-ui/core';\nimport packageData from 'app/../../package.json';\n\nexport interface FooterProps {\n}\n\nexport interface FooterState {\n}\n\nexport class Footer extends React.Component<FooterProps, FooterState> {\n  render() {\n    return (\n      <footer>\n        <br/>\n        <Grid container justify=\"flex-end\">\n          Version {packageData.version}, Powered by&nbsp;\n          <Link href=\"https://github.com/tc-imba\" target=\"_blank\">tc-imba</Link>,\n          Copyright 2019-2020\n        </Grid>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import * as React from 'react';\nimport {\n  Container,\n  CssBaseline,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport Header from 'app/components/Header';\nimport Footer from 'app/components/Footer';\n\nimport {\n  withStyles,\n  createStyles,\n  WithStyles,\n  Theme,\n} from '@material-ui/core/styles';\nimport {RouteComponentProps} from 'react-router';\n\nconst styles = (theme: Theme) => createStyles({\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing(6)}px`,\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n});\n\nexport interface RootProps extends RouteComponentProps<any>,\n  WithStyles<typeof styles> {\n}\n\nexport interface RootState {\n}\n\nclass Root extends React.Component<RootProps, RootState> {\n  renderDevTool() {\n    if (process.env.NODE_ENV !== 'production') {\n      const DevTools = require('mobx-react-devtools').default;\n      return <DevTools/>;\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className=\"container\">\n        <Container maxWidth={'lg'}>\n          <CssBaseline/>\n          <br/>\n          <Paper>\n            <div className={classes.mainFeaturedPostContent}>\n              <Header namespace=\"tc-imba\" repo=\"ji-grade-analysis\"/>\n              <br/>\n              <Grid container justify=\"center\">\n                {this.props.children}\n              </Grid>\n              <Footer/>\n            </div>\n          </Paper>\n        </Container>\n        {this.renderDevTool()}\n      </div>\n    );\n  }\n}\n\nconst RootWithStyle = withStyles(styles)(Root);\nexport default props => <RootWithStyle {...props} />;\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport {STORE_ROUTER} from 'app/constants';\nimport {\n  Button, Grid,\n  Typography, Link,\n} from '@material-ui/core';\nimport statsData from 'ji-grade-analysis-data/stats.json';\n\nexport interface MainProps extends RouteComponentProps<any> {\n}\n\nexport interface MainState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Grid item md={10}>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          Analysis anonymous grades retrieved by all JI students,\n          among the courses with the same course code in different\n          sections and terms, aiming at forming a better\n          and fairer GPA environment in JI.\n        </Typography>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          <Link color=\"secondary\">{statsData.scores}</Link> score data\n          from <Link color=\"secondary\">{statsData.lessons}</Link> classes\n          of <Link color=\"secondary\">{statsData.courses}</Link> courses\n          have been analyzed.\n        </Typography>\n        <Grid container justify=\"center\">\n          <Button variant=\"outlined\" color=\"secondary\" size=\"large\"\n                  component={RouterLink} to=\"/courses\">\n            Start Explore\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","export const STORE_TODO = 'todo';\nexport const STORE_ROUTER = 'router';\nexport const STORE_COURSES = 'courses';\n","import * as React from 'react';\nimport {forwardRef} from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Icons} from 'material-table';\n\nconst icons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>),\n};\n\nexport default icons;\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  // Divider,\n  // TableHead,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\n\nimport icons from 'app/components/icons';\nimport {STORE_COURSES, STORE_ROUTER} from 'app/constants';\nimport {CoursesStore, RouterStore} from 'app/stores';\nimport CourseModel from 'app/models/CourseModel';\n\nexport interface CourseListProps {\n  /* empty */\n}\n\nexport interface CourseListState {\n  // columns: Array<Column<CourseModel>>;\n  data: CourseModel[];\n}\n\n@inject(STORE_COURSES, STORE_ROUTER)\nexport class CourseList extends React.Component<CourseListProps, CourseListState> {\n  columns: Array<Column<CourseModel>>;\n\n  constructor(props: CourseListProps, context: any) {\n    super(props, context);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    this.columns = [\n      {\n        title: 'Code', field: 'courseCode',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Name', field: 'courseNameEn',\n        cellStyle: {width: '35%', maxWidth: '35%'},\n      },\n      {\n        title: 'Name (Chinese)', field: 'courseName',\n        cellStyle: {width: '35%', maxWidth: '35%'},\n      },\n      {title: 'Terms', field: 'terms', sorting: false},\n    ];\n    this.state = {\n      data: coursesStore.courses,\n    };\n  }\n\n  render() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    return (\n      // <div>\n      <MaterialTable\n        title=\"Courses\"\n        columns={this.columns}\n        data={this.state.data}\n        icons={icons}\n        options={{\n          pageSize: 10,\n          pageSizeOptions: [10, 25, 50, 100],\n        }}\n        style={{width: '100%'}}\n        components={{\n          Container: props => (<Paper elevation={0} {...props}></Paper>),\n        }}\n        onRowClick={(event, rowData) => {\n          console.log(rowData.courseCode);\n          const currentHash = router.location.hash;\n          console.log(currentHash);\n          const nextHash = `/courses/${rowData.courseCode}`;\n          if (currentHash !== nextHash) {\n            router.push(nextHash);\n          }\n        }}\n      />\n      // </div>\n    );\n  }\n}\n\nexport default CourseList;\n","import * as React from 'react';\n\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { CourseList } from 'app/components/CourseList';\n\nimport { STORE_ROUTER } from 'app/constants';\n// import {\n//   Container,\n//   CssBaseline, Paper\n// } from '@material-ui/core';\n\nexport interface CourseListPageProps extends RouteComponentProps<any> {\n}\n\nexport interface CourseListPageState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class CourseListPage extends React.Component<CourseListPageProps, CourseListPageState> {\n  constructor(props: CourseListPageProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <CourseList/>\n    );\n  }\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  Chart,\n  // Legend,\n  Tooltip,\n  BarSeries,\n  LineSeries,\n  PieSeries,\n  Title,\n} from '@devexpress/dx-react-chart-material-ui';\nimport {\n  Animation,\n  EventTracker,\n  HoverState,\n  ArgumentAxis,\n  ValueAxis,\n  // Palette,\n} from '@devexpress/dx-react-chart';\n// import {schemePastel2} from 'd3-scale-chromatic';\n\nimport {withStyles} from '@material-ui/styles';\nimport _ from 'lodash';\n\nimport {STORE_COURSES} from 'app/constants';\n// import {ScoreModel} from 'app/models/CourseModel';\n// import {CoursesStore} from 'app/stores';\nimport {ScoreData} from 'app/components/Lesson';\n\nexport interface CurveChartProps {\n  lessonClassCode: string\n  data: ScoreData[];\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n}\n\nexport interface CurveChartState {\n  hover: any;\n  tooltipTarget: any;\n  totalCount: number;\n  chartData: ScoreData[];\n}\n\nconst chartRootStyles = {\n  chart: {\n    paddingRight: '20px',\n  },\n};\n\n/*const legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n};\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1),\n  },\n});\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column',\n  },\n};*/\n\nconst colors = ['#fdca00', '#19335d', '#ffffff'];\n\nconst BarSeriesPointBase = ({index, color, ...restProps}) => {\n  color = colors[index % 2];\n  // @ts-ignore\n  return <BarSeries.Point index={index}\n                          color={color} {...restProps}/>;\n};\n\n/*const LineSeriesPathBase = ({coordinates, color, ...restProps}) => {\n  console.log(coordinates);\n  // color = colors[coordinates.arg % 2];\n  // @ts-ignore\n  return <LineSeries.Path coordinates={coordinates}\n                            color={color} {...restProps}/>;\n};*/\n\nconst PieSeriesPointBase = ({index, color, endAngle, ...restProps}) => {\n  if (index >= 2 && index % 2 == 0 && Math.abs(endAngle - Math.PI * 2) < 1e-5) {\n    color = colors[2];\n  } else {\n    color = colors[index % 2];\n  }\n  // @ts-ignore\n  return <PieSeries.Point index={index} endAngle={endAngle}\n                          color={color} {...restProps}/>;\n};\n\nconst ChartRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Chart.Root {...restProps} className={classes.chart}/>\n);\n\n/*const LegendRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Root {...restProps} className={classes.root}/>\n);\nconst LegendLabelBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Label {...restProps} className={classes.label}/>\n);\nconst LegendItemBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Item {...restProps} className={classes.item}/>\n);*/\n\n// @ts-ignore\nconst ChartRoot = withStyles(chartRootStyles, {name: 'ChartRoot'})(\n  ChartRootBase);\n\n/*// @ts-ignore\nconst LegendRoot = withStyles(legendStyles, {name: 'LegendRoot'})(\n  LegendRootBase);\n// @ts-ignore\nconst LegendLabel = withStyles(legendLabelStyles, {name: 'LegendLabel'})(\n  LegendLabelBase);\n// @ts-ignore\nconst LegendItem = withStyles(legendItemStyles, {name: 'LegendItem'})(\n  LegendItemBase);*/\n\n@inject(STORE_COURSES)\nexport class CurveChart extends React.Component<CurveChartProps, CurveChartState> {\n  constructor(props: CurveChartProps, context: any) {\n    super(props, context);\n    const chartData = CurveChart.getChartData(props.data, props.chartType,\n      props.hideUnknown, props.hideZero);\n    this.state = {\n      hover: null,\n      tooltipTarget: null,\n      totalCount: CurveChart.getTotalCount(chartData),\n      chartData: chartData,\n    };\n  }\n\n  static getTotalCount(data: ScoreData[]) {\n    return _.sumBy(data, (scoreData: ScoreData) => scoreData.count);\n  }\n\n  static getChartData(\n    data: ScoreData[], chartType: string, hideUnknown: boolean,\n    hideZero: boolean) {\n    let newData = data;\n    if (hideZero || chartType === 'pie') {\n      newData = _.filter(data, scoreData => scoreData.count != 0);\n    }\n    if (hideUnknown && newData.length > 0 && _.last(newData).grade ===\n      'Unknown') {\n      newData = _.slice(newData, 0, newData.length - 1);\n    }\n    return newData;\n  }\n\n  /*  updateChartData() {\n      this.setState({totalCount: CurveChart.getTotalCount(this.props.data)});\n    }*/\n\n  /*  componentDidMount() {\n      this.updateChartData();\n    }*/\n\n  componentDidUpdate(\n    prevProps: Readonly<CurveChartProps>,\n    prevState: Readonly<CurveChartState>, snapshot?: any) {\n    if (this.props.lessonClassCode === prevProps.lessonClassCode) {\n      return;\n    } else if (this.props.chartType === prevProps.chartType &&\n      this.props.hideUnknown === prevProps.hideUnknown &&\n      this.props.hideZero === prevProps.hideZero\n    ) {\n      return;\n    }\n    const chartData = CurveChart.getChartData(this.props.data,\n      this.props.chartType, this.props.hideUnknown, this.props.hideZero);\n    this.setState({\n      totalCount: CurveChart.getTotalCount(chartData),\n      chartData: chartData,\n    });\n  }\n\n  onChangeHover(hover) {\n    this.setState({hover});\n  }\n\n  onChangeTooltip(targetItem) {\n    this.setState({tooltipTarget: targetItem});\n  }\n\n  render() {\n    const TooltipContent = (props) => {\n      // const { targetItem, text, ...restProps } = props;\n      const {targetItem} = props;\n      const pointData = this.state.chartData[targetItem.point];\n      const percentage = Math.round(\n        pointData.count / this.state.totalCount * 10000) / 100;\n      // console.log(targetItem);\n      return (\n        <h3>\n          {pointData.grade}: {percentage}%\n          ({pointData.count}/{this.state.totalCount})\n        </h3>\n      );\n    };\n\n    let series = [];\n    if (this.props.chartType === 'bar') {\n      series = [\n        <BarSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          pointComponent={BarSeriesPointBase}\n        />,\n        // @ts-ignore\n        <ArgumentAxis key=\"argument\"/>,\n        // @ts-ignore\n        <ValueAxis key=\"value\"/>,\n      ];\n    } else if (this.props.chartType === 'line') {\n      series = [\n        <LineSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          color={colors[1]}\n        />,\n        // @ts-ignore\n        <ArgumentAxis key=\"argument\"/>,\n        // @ts-ignore\n        <ValueAxis key=\"value\"/>,\n      ];\n    } else if (this.props.chartType === 'pie') {\n      series = [\n        <PieSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          innerRadius={0.4}\n          outerRadius={0.8}\n          pointComponent={PieSeriesPointBase}\n        />,\n        // <Legend key=\"legend\"/>,\n        // <Palette scheme={schemePastel2}/>,\n      ];\n    }\n\n    return (\n      <Chart\n        data={this.state.chartData}\n        // @ts-ignore\n        rootComponent={ChartRoot}\n      >\n        {series}\n        <Title text=\"\"/>\n        <Animation/>\n        <EventTracker/>\n        <HoverState hover={this.state.hover}\n                    onHoverChange={this.onChangeHover.bind(this)}/>\n        <Tooltip\n          targetItem={this.state.tooltipTarget}\n          onTargetItemChange={this.onChangeTooltip.bind(this)}\n          contentComponent={TooltipContent}\n        />\n      </Chart>\n    );\n  }\n}\n\n{/*<Legend*/\n}\n{/*  // position=\"right\"*/\n}\n{/*  // rootComponent={LegendRoot}*/\n}\n{/*  // itemComponent={LegendItem}*/\n}\n{/*  // // @ts-ignore*/\n}\n{/*  // labelComponent={LegendLabel}*/\n}\n{/*/>*/\n}\n","import * as React from 'react';\nimport {Grid} from '@material-ui/core';\nimport {CurveChart} from 'app/components/CurveChart';\n\nexport interface ScoreData {\n  grade: string;\n  count: number;\n}\n\nexport interface LessonProps {\n  /* empty */\n  scores: ScoreData[];\n  lessonClassCode: string;\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n}\n\nexport interface LessonState {\n\n}\n\nexport class Lesson extends React.Component<LessonProps, LessonState> {\n\n  constructor(props: LessonProps, context: any) {\n    super(props, context);\n    // console.log(this.props.lessonClassCode)\n  }\n\n  /*  getColor() {\n      const colors = ['#fdca00', '#19335d'];\n      // console.log(this.props.lessonClassCode);\n      const digit = this.props.lessonClassCode.charCodeAt(\n        this.props.lessonClassCode.length - 1);\n      return colors[digit % 2];\n    }*/\n\n  render() {\n    return (\n      <Grid>\n        <CurveChart data={this.props.scores} chartType={this.props.chartType}\n                    lessonClassCode={this.props.lessonClassCode}\n                    hideUnknown={this.props.hideUnknown}\n                    hideZero={this.props.hideZero}/>\n      </Grid>\n    );\n  }\n\n}\n\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  FormControlLabel,\n  // Tab,\n  // Tabs,\n  // Typography,\n  RadioGroup,\n  Radio,\n  Switch,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\nimport icons from 'app/components/icons';\nimport _, {Dictionary} from 'lodash';\n\nimport {STORE_COURSES} from 'app/constants';\nimport CourseModel, {LessonModel} from 'app/models/CourseModel';\nimport {CoursesStore} from 'app/stores';\nimport {Lesson, ScoreData} from 'app/components/Lesson';\n\n// import {CurvePieChart} from 'app/components/CurvePieChart';\n\nexport interface CourseProps {\n  /* empty */\n  courseCode: string\n}\n\nexport interface CourseState {\n  course: CourseModel;\n  lessons: LessonModel[];\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n  // lessonClassCode: string | boolean;\n  // lesson: LessonModel | null;\n}\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D', 'F'];\n\n@inject(STORE_COURSES)\nexport class Course extends React.Component<CourseProps, CourseState> {\n  columns: Array<Column<LessonModel>>;\n  scoreDataMap: Dictionary<ScoreData[]> = {};\n\n  constructor(props: CourseProps, context: any) {\n    super(props, context);\n    this.columns = [\n      {\n        title: 'Code', field: 'lessonClassCode',\n        cellStyle: {width: '20%', maxWidth: '20%'},\n      },\n      {\n        title: 'Term', field: 'termName',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Name', field: 'lessonClassName',\n        cellStyle: {width: '25%', maxWidth: '25%'},\n      },\n      {\n        title: 'Found', field: 'scoreNum',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Elected', field: 'studentNumStr',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Lecturers', field: 'lecturersStr', sorting: false,\n        cellStyle: {width: '25%', maxWidth: '25%'},\n      },\n    ];\n    this.state = {\n      course: null,\n      lessons: [],\n      chartType: 'bar',\n      hideUnknown: false,\n      hideZero: false,\n    };\n  }\n\n  updateCourse() {\n    console.log(this.props.courseCode);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const course = coursesStore.coursesMap[this.props.courseCode];\n    let lessons: LessonModel[] = [];\n    course.lessons.forEach(a => {\n      if (coursesStore.lessonsMap.hasOwnProperty(a[0])) {\n        let lesson = coursesStore.lessonsMap[a[0]];\n        lesson.lecturersStr = lesson.lecturers.join(', ');\n        lesson.studentNumStr = lesson.studentNum >= 0 ?\n          lesson.studentNum.toString() : '-';\n        lessons.push(lesson);\n      }\n    });\n    this.setState({\n      course: course,\n      lessons: lessons,\n    });\n  }\n\n  ensureScoreDataMap(lessonClassCode: string) {\n    if (this.scoreDataMap.hasOwnProperty(lessonClassCode)) {\n      return this.scoreDataMap[lessonClassCode];\n    }\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    let studentNum = 0;\n    let scoreNum = 0;\n    let scoreData: ScoreData[];\n    if (coursesStore.lessonsMap.hasOwnProperty(lessonClassCode)) {\n      const lesson = coursesStore.lessonsMap[lessonClassCode];\n      studentNum = lesson.studentNum;\n    }\n    if (coursesStore.scoresMap.hasOwnProperty(lessonClassCode)) {\n      const scoreRawData = coursesStore.scoresMap[lessonClassCode];\n      const scores = scoreRawData.scores;\n      const temp = _.zip(grades, scores);\n      scoreData = _.map(temp, value => {\n        scoreNum += value[1];\n        return {grade: value[0], count: value[1]};\n      });\n    } else {\n      scoreData = _.map(grades, value => {\n        return {grade: value, count: 0};\n      });\n    }\n    if (studentNum > scoreNum) {\n      scoreData.push({grade: 'Unknown', count: studentNum - scoreNum});\n    } else {\n      scoreData.push({grade: 'Unknown', count: 0});\n    }\n    this.scoreDataMap[lessonClassCode] = scoreData;\n    return scoreData;\n  }\n\n  componentDidMount() {\n    this.updateCourse();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CourseProps>, prevState: Readonly<CourseState>,\n    snapshot?: any) {\n    if (this.props.courseCode !== prevProps.courseCode) {\n      this.updateCourse();\n    }\n  }\n\n  onChangeChartType(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      chartType: (event.target as HTMLInputElement).value,\n    });\n  }\n\n  onChangeHideUnknown(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      hideUnknown: event.target.checked,\n    });\n  }\n\n  onChangeHideZero(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      hideZero: event.target.checked,\n    });\n  }\n\n  render() {\n    let title = this.props.courseCode;\n    if (this.state.course) {\n      title += ' - ' + this.state.course.courseNameEn + ' - ' +\n        this.state.course.courseName;\n    }\n    return (\n      <React.Fragment>\n        <Grid container>\n          <RadioGroup value={this.state.chartType}\n                      onChange={this.onChangeChartType.bind(this)} row>\n            <FormControlLabel\n              value=\"bar\"\n              control={<Radio color=\"secondary\"/>}\n              label=\"Bar\"\n              labelPlacement=\"bottom\"\n            />\n            <FormControlLabel\n              value=\"line\"\n              control={<Radio color=\"secondary\"/>}\n              label=\"Line\"\n              labelPlacement=\"bottom\"\n            />\n            <FormControlLabel\n              value=\"pie\"\n              control={<Radio color=\"secondary\"/>}\n              label=\"Pie\"\n              labelPlacement=\"bottom\"\n            />\n          </RadioGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.hideUnknown}\n                onChange={this.onChangeHideUnknown.bind(this)}\n                color=\"secondary\"\n              />\n            }\n            label=\"Hide Unknown\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.hideZero}\n                onChange={this.onChangeHideZero.bind(this)}\n                color=\"secondary\"\n              />\n            }\n            label=\"Hide Zero\"\n          />\n        </Grid>\n        <MaterialTable\n          title={title}\n          columns={this.columns}\n          data={this.state.lessons}\n          icons={icons}\n          options={{\n            pageSize: 10,\n            pageSizeOptions: [10, 25, 50, 100],\n          }}\n          style={{width: '100%'}}\n          components={{\n            Container: props => (<Paper elevation={0} {...props}></Paper>),\n          }}\n          detailPanel={rowData => {\n            const lessonClassCode = rowData.lessonClassCode;\n            const scoreData = this.ensureScoreDataMap(lessonClassCode);\n            // console.log(lessonClassCode);\n            // console.log(scoreData);\n            return (\n              <Lesson scores={scoreData} lessonClassCode={lessonClassCode}\n                      chartType={this.state.chartType}\n                      hideUnknown={this.state.hideUnknown}\n                      hideZero={this.state.hideZero}/>\n            );\n          }}\n          onRowClick={(event, rowData, togglePanel) => togglePanel()}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\n// export default Course;\n\n{/*<Tabs\n            value={this.state.lessonClassCode}\n            onChange={this.handleChange.bind(this)}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {\n              this.state.course.lessons.map(lesson =>\n                <Tab key={lesson[0]} label={lesson[1]} value={lesson[0]}/>)\n            }\n          </Tabs>\n          <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n          >\n            {this.state.lesson.lecturers}\n            {typeof this.state.lessonClassCode === 'string' ?\n              <CurvePieChart lessonClassCode={this.state.lessonClassCode}/> :\n              null\n            }\n          </Typography>*/\n}\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Course} from 'app/components/Course';\n\nimport {STORE_COURSES} from 'app/constants';\nimport {CoursesStore} from 'app/stores/CoursesStore';\n\n// import {RouterStore} from 'app/stores';\n\nexport interface CoursePageProps extends RouteComponentProps<any> {\n}\n\nexport interface CoursePageState {\n  courseCode: string;\n  available: boolean;\n}\n\n@inject(STORE_COURSES)\n@observer\nexport class CoursePage extends React.Component<CoursePageProps, CoursePageState> {\n  constructor(props: CoursePageProps, context: any) {\n    super(props, context);\n    const {match} = this.props;\n    const courseStore = this.props[STORE_COURSES] as CoursesStore;\n    const courseCode = match.params.courseCode.toUpperCase();\n    this.state = {\n      courseCode: courseCode,\n      available: courseStore.coursesMap.hasOwnProperty(courseCode),\n    };\n  }\n\n  render() {\n    return (\n      this.state.available ?\n        <Course courseCode={this.state.courseCode}/> :\n        <div>Sorry, course {this.state.courseCode} is not available.</div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {hot} from 'react-hot-loader/root';\nimport {Router, Route, Switch} from 'react-router';\nimport Root from 'app/containers/Root';\nimport {Main} from 'app/containers/Main';\nimport {CourseListPage} from 'app/containers/CourseListPage';\nimport {CoursePage} from 'app/containers/CoursePage';\n\n// render react DOM\nexport const App = hot(({history}) => (\n  <Root>\n    <Router history={history}>\n      <Switch>\n        <Route exact path='/' component={Main}/>\n        <Route exact path='/courses' component={CourseListPage}/>\n        <Route path=\"/courses/:courseCode\" component={CoursePage}/>\n      </Switch>\n    </Router>\n  </Root>\n));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react';\n\nimport {createHashHistory} from 'history';\nimport {TodoModel} from 'app/models';\nimport {createStores} from 'app/stores';\nimport {App} from 'app';\n\n\nimport 'typeface-roboto';\n\n// default fixtures for TodoStore\nconst defaultTodos = [\n  new TodoModel('Use Mobx'),\n  new TodoModel('Use React', true),\n];\n\n// prepare MobX stores\nconst history = createHashHistory();\nconst rootStore = createStores(history, defaultTodos);\n\n// render react DOM\nReactDOM.render(\n  <Provider {...rootStore}>\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n/*\n<Container>\n        <Paper className={classes.mainFeaturedPost}>\n          <Grid container>\n            <Grid item md={6}>\n              <div className={classes.mainFeaturedPostContent}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                            gutterBottom>\n                  JI Grade Analysis\n                </Typography>\n                <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                  Analysis anonymous grades retrieved by all JI students,\n                  among the courses with the same course id in different\n                  sections and academic years, aiming at forming a better\n                  and fairer GPA environment in JI.\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n */\n"],"sourceRoot":""}