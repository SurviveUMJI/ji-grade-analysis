{"version":3,"sources":["webpack:///./app/models/TodoModel.ts","webpack:///./app/models/CourseModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/constants/todos.ts","webpack:///./app/stores/CoursesStore.ts","webpack:///./app/stores/GlobalStateStore.ts","webpack:///./app/constants/stores.ts","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/AutoTheme/index.tsx","webpack:///./app/containers/Root/index.tsx","webpack:///./app/containers/Main/index.tsx","webpack:///./app/components/icons.tsx","webpack:///./app/components/PatchedPagination/index.tsx","webpack:///./app/components/CourseList/index.tsx","webpack:///./app/containers/CourseListPage/index.tsx","webpack:///./app/components/CurveChart/index.tsx","webpack:///./app/components/Lesson/index.tsx","webpack:///./app/components/Course/index.tsx","webpack:///./app/containers/CoursePage/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx","webpack:///./app/stores/createStore.ts"],"names":["text","completed","this","id","TodoModel","generateId","nextId","observable","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","computed","action","history","syncHistoryWithStore","TodoFilter","courses","coursesMap","lessonsMap","scoresMap","setCourseListSearchText","searchText","courseListSearchText","setCourseSearchText","course","courseSearchText","STORE_ROUTER","STORE_COURSES","STORE_GLOBAL_STATE","ALL","ACTIVE","COMPLETED","render","Grid","container","justifyContent","Typography","component","variant","color","gutterBottom","align","namespace","props","repo","spacing","type","size","Link","href","target","children","prefersDarkMode","useMediaQuery","theme","createTheme","palette","primary","light","main","dark","secondary","error","warning","info","success","ThemeProvider","renderDevTool","classes","className","Container","maxWidth","CssBaseline","Paper","mainFeaturedPostContent","RootWithStyle","withStyles","createStyles","mainFeaturedPost","backgroundColor","grey","common","white","marginBottom","padding","breakpoints","down","paddingRight","paddingLeft","Root","context","state","md","paragraph","Button","to","Main","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","PatchedPagination","ActionsComponent","onChangePage","onChangeRowsPerPage","tablePaginationProps","TablePagination","onPageChange","onRowsPerPageChange","subprops","actionsComponentProps","coursesStore","globalStateStore","columns","title","field","cellStyle","width","sorting","router","icons","options","pageSize","pageSizeOptions","style","components","elevation","Pagination","onRowClick","event","rowData","console","log","courseCode","currentHash","location","hash","nextHash","onSearchChange","CourseList","CourseListPage","colors","BarSeriesPointBase","index","restProps","PieSeriesPointBase","endAngle","Math","abs","PI","ChartRoot","chart","name","chartData","getChartData","chartType","hideUnknown","hideZero","hover","tooltipTarget","totalCount","getTotalCount","CurveChart","scoreData","count","newData","length","grade","componentDidUpdate","prevProps","prevState","snapshot","lessonClassCode","setState","onChangeHover","onChangeTooltip","targetItem","series","key","valueField","argumentField","pointComponent","innerRadius","outerRadius","rootComponent","onHoverChange","bind","onTargetItemChange","contentComponent","pointData","point","percentage","round","scores","grades","scoreDataMap","lessons","updateCourse","forEach","a","hasOwnProperty","lesson","lecturersStr","lecturers","join","studentNumStr","studentNum","toString","ensureScoreDataMap","scoreNum","temp","value","componentDidMount","onChangeChartType","onChangeHideUnknown","checked","onChangeHideZero","courseNameEn","courseName","RadioGroup","onChange","row","FormControlLabel","control","Radio","label","labelPlacement","Switch","detailPanel","Lesson","togglePanel","Course","match","courseStore","params","toUpperCase","available","CoursePage","App","exact","path","rootStore","defaultTodos","todoStore","TodoStore","routerStore","RouterStore","CoursesStore","GlobalStateStore","createStores","document","getElementById"],"mappings":"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","file":"b36cee7b18745e4672fe.js","sourcesContent":["import { observable } from 'mobx';\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import {observable} from 'mobx';\n\nexport class ScoreModel {\n  readonly courseCode: string;\n  readonly lessonClassCode: string;\n  readonly scores: number[];\n}\n\nexport class LessonModel {\n  readonly lessonClassCode: string;\n  readonly courseCode: string;\n  readonly lessonClassName: string;\n  readonly termName: string;\n  readonly studentNum: number;\n  readonly scoreNum: number;\n  readonly lecturers: string[];\n  @observable public lecturersStr?: string;\n  @observable public studentNumStr?: string;\n}\n\nexport class CourseModel {\n  readonly courseCode: string;\n  readonly courseName: string;\n  readonly courseNameEn: string;\n  readonly lessons: Array<string[]>;\n  readonly terms: string;\n}\n\nexport default CourseModel;\n\n","import { observable, computed, action } from 'mobx';\nimport { TodoModel } from 'app/models';\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == 'boolean') {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == 'string') {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from 'history';\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore\n} from 'mobx-react-router';\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: 'All',\n  [TodoFilter.ACTIVE]: 'Active',\n  [TodoFilter.COMPLETED]: 'Completed'\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: '#',\n  [TodoFilter.ACTIVE]: '#active',\n  [TodoFilter.COMPLETED]: '#completed'\n};\n","import {observable} from 'mobx';\nimport _ from 'lodash';\n\nimport {CourseModel, LessonModel, ScoreModel} from 'app/models';\n\nimport courses from 'ji-grade-analysis-data/courses.json';\nimport lessons from 'ji-grade-analysis-data/lessons.json';\nimport scores from 'ji-grade-analysis-data/scores.json';\nimport {Dictionary} from 'lodash';\n\nexport class CoursesStore {\n\n  @observable public courses: Array<CourseModel>;\n  @observable public coursesMap: Dictionary<CourseModel>;\n  @observable public lessonsMap: Dictionary<LessonModel>;\n  @observable public scoresMap: Dictionary<ScoreModel>;\n\n  constructor() {\n    this.courses = courses;\n    this.coursesMap = _.keyBy(courses, 'courseCode');\n    this.lessonsMap = _.keyBy(lessons, 'lessonClassCode');\n    this.scoresMap = _.keyBy(scores, 'lessonClassCode');\n    /*scores.forEach(score => {\n      const courseCode = score.courseCode;\n      if (this.coursesMap.hasOwnProperty(courseCode)) {\n        if (!this.coursesMap[courseCode].hasOwnProperty('sections')) {\n          this.coursesMap[courseCode].sections = [];\n        }\n        this.coursesMap[courseCode].sections.push(score);\n        console.log(score, this.coursesMap[courseCode].sections)\n      }\n    });*/\n  }\n\n}\n","import { observable, computed, action } from 'mobx';\nimport {Dictionary} from 'lodash';\n\nexport class GlobalStateStore {\n\n  @observable public courseListSearchText: string\n  @observable public courseSearchText: Dictionary<string>\n\n  constructor() {\n    this.courseListSearchText = \"\";\n    this.courseSearchText = {};\n  }\n\n  @action\n  setCourseListSearchText = (searchText: string): void => {\n    this.courseListSearchText = searchText\n  };\n\n  @action\n  setCourseSearchText = (course: string, searchText: string): void => {\n    this.courseSearchText[course] = searchText\n  };\n\n}\n","export const STORE_TODO = 'todo';\nexport const STORE_ROUTER = 'router';\nexport const STORE_COURSES = 'courses';\nexport const STORE_GLOBAL_STATE = 'global_state';\n","import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport {GitHubButton, GitHubButtonProvider} from 'react-github-button';\nimport 'react-github-button/assets/style.less';\n\nexport interface HeaderProps {\n  namespace: string;\n  repo: string;\n  /* empty */\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  render() {\n    return (\n      <div>\n        <Grid container justifyContent=\"center\">\n          <Typography component=\"h1\" variant=\"h3\" color=\"inherit\"\n                      gutterBottom align={'center'}>\n            UM-SJTU JI Grade Analysis\n          </Typography>\n        </Grid>\n        <GitHubButtonProvider namespace={this.props.namespace}\n                              repo={this.props.repo}>\n          <Grid container justifyContent=\"flex-end\" spacing={1}>\n            <Grid item>\n              <GitHubButton type=\"stargazers\" size=\"large\"/>\n            </Grid>\n            <Grid item>\n              <GitHubButton type=\"watchers\" size=\"large\"/>\n            </Grid>\n            <Grid item>\n              <GitHubButton type=\"forks\" size=\"large\"/>\n            </Grid>\n          </Grid>\n        </GitHubButtonProvider>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport {Grid, Link} from '@material-ui/core';\nimport packageData from 'app/../../package.json';\n\nexport interface FooterProps {\n}\n\nexport interface FooterState {\n}\n\nexport class Footer extends React.Component<FooterProps, FooterState> {\n  render() {\n    return (\n      <footer>\n        <br/>\n        <Grid container justifyContent=\"flex-end\">\n          Version {packageData.version}, Powered by&nbsp;\n          <Link href=\"https://github.com/tc-imba\" target=\"_blank\">tc-imba</Link>,\n          Copyright 2019-2021\n        </Grid>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, {FunctionComponent} from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\n\nconst AutoTheme: FunctionComponent = ({children}) => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(\n      () =>\n          createTheme({\n            palette: {\n              type: prefersDarkMode ? 'dark' : 'light',\n              primary: {\n                light: '#a6d4fa',\n                main: '#90caf9',\n                dark: '#648dae',\n              },\n              secondary: {\n                light: '#f6a5c0',\n                main: '#f48fb1',\n                dark: '#aa647b',\n              },\n              error: {\n                light: '#e57373',\n                main: '#f44336',\n                dark: '#d32f2f',\n              },\n              warning: {\n                light: '#ffb74d',\n                main: '#ff9800',\n                dark: '#f57c00',\n              },\n              info: {\n                light: '#64b5f6',\n                main: '#2196f3',\n                dark: '#1976d2',\n              },\n              success: {\n                light: '#81c784',\n                main: '#4caf50',\n                dark: '#388e3c',\n              },\n            },\n          }),\n      [prefersDarkMode],\n  );\n  return (\n      <ThemeProvider theme={theme}>\n        {children}\n      </ThemeProvider>\n  );\n};\n\nexport default AutoTheme;\n","import * as React from 'react';\nimport {\n  Container,\n  CssBaseline,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport Header from 'app/components/Header';\nimport Footer from 'app/components/Footer';\nimport AutoTheme from 'app/components/AutoTheme';\n\nimport {\n  withStyles,\n  createStyles,\n  WithStyles,\n  Theme,\n} from '@material-ui/core/styles';\nimport {RouteComponentProps} from 'react-router';\n\nconst styles = (theme: Theme) => createStyles({\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing(6)}px`,\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n});\n\nexport interface RootProps extends RouteComponentProps<any>,\n    WithStyles<typeof styles> {\n}\n\nexport interface RootState {\n}\n\nclass Root extends React.Component<RootProps, RootState> {\n  renderDevTool() {\n    if (process.env.NODE_ENV !== 'production') {\n      const DevTools = require('mobx-react-devtools').default;\n      return <DevTools/>;\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n        <AutoTheme>\n          <div className=\"container\">\n            <Container maxWidth={'lg'}>\n              <CssBaseline/>\n              <br/>\n              <Paper>\n                <div className={classes.mainFeaturedPostContent}>\n                  <Header namespace=\"SurviveUMJI\" repo=\"ji-grade-analysis\"/>\n                  <br/>\n                  <Grid container justifyContent=\"center\">\n                    {this.props.children}\n                  </Grid>\n                  <Footer/>\n                </div>\n              </Paper>\n            </Container>\n            {this.renderDevTool()}\n          </div>\n        </AutoTheme>\n    );\n  }\n}\n\nconst RootWithStyle = withStyles(styles)(Root);\nexport default props => <RootWithStyle {...props} />;\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport {STORE_ROUTER} from 'app/constants';\nimport {\n  Button, Grid,\n  Typography, Link,\n} from '@material-ui/core';\nimport statsData from 'ji-grade-analysis-data/stats.json';\n\nexport interface MainProps extends RouteComponentProps<any> {\n}\n\nexport interface MainState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Grid item md={10}>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          Analysis anonymous grades retrieved by all JI students,\n          among the courses with the same course code in different\n          sections and terms, aiming at forming a better\n          and fairer GPA environment in JI.\n        </Typography>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          <Link color=\"primary\">{statsData.scores}</Link> score data\n          from <Link color=\"primary\">{statsData.lessons}</Link> classes\n          of <Link color=\"primary\">{statsData.courses}</Link> courses\n          have been analyzed.\n        </Typography>\n        <Grid container justifyContent=\"center\">\n          <Button variant=\"outlined\" color=\"primary\" size=\"large\"\n                  component={RouterLink} to=\"/courses\">\n            Start Explore\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import * as React from 'react';\nimport {forwardRef} from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {Icons} from 'material-table';\n\nconst icons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>),\n};\n\nexport default icons;\n","// @ts-nocheck\n\nimport { TablePagination, TablePaginationProps } from '@material-ui/core';\nimport React from 'react';\n\nexport function PatchedPagination(props: TablePaginationProps) {\n  const {\n    ActionsComponent,\n    onChangePage,\n    onChangeRowsPerPage,\n    ...tablePaginationProps\n  } = props;\n\n  // @ts-ignore\n  return (\n    <TablePagination\n      {...tablePaginationProps}\n      onPageChange={onChangePage}\n      onRowsPerPageChange={onChangeRowsPerPage}\n      ActionsComponent={(subprops) => {\n        const { onPageChange, ...actionsComponentProps } = subprops;\n        // @ts-ignore\n        return (\n          <ActionsComponent\n            {...actionsComponentProps}\n            onChangePage={onPageChange}\n          />\n        );\n      }}\n    />\n  );\n}\n\nexport default PatchedPagination\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  // Divider,\n  // TableHead,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\n\nimport icons from 'app/components/icons';\nimport {PatchedPagination} from 'app/components/PatchedPagination';\n\nimport {STORE_COURSES, STORE_ROUTER, STORE_GLOBAL_STATE} from 'app/constants';\nimport {CoursesStore, RouterStore, GlobalStateStore} from 'app/stores';\nimport CourseModel from 'app/models/CourseModel';\n\nexport interface CourseListProps {\n  /* empty */\n}\n\nexport interface CourseListState {\n  // columns: Array<Column<CourseModel>>;\n  data: CourseModel[];\n}\n\n@inject(STORE_COURSES, STORE_ROUTER, STORE_GLOBAL_STATE)\nexport class CourseList extends React.Component<CourseListProps, CourseListState> {\n  columns: Array<Column<CourseModel>>;\n  searchText: string\n\n  constructor(props: CourseListProps, context: any) {\n    super(props, context);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    this.searchText = globalStateStore.courseListSearchText || \"\";\n    this.columns = [\n      {\n        title: 'Code', field: 'courseCode',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Name', field: 'courseNameEn',\n        cellStyle: {width: '35%', maxWidth: '35%'},\n      },\n      {\n        title: 'Name (Chinese)', field: 'courseName',\n        cellStyle: {width: '35%', maxWidth: '35%'},\n      },\n      {title: 'Terms', field: 'terms', sorting: false},\n    ];\n    this.state = {\n      data: coursesStore.courses,\n    };\n  }\n\n  render() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    return (\n      // <div>\n      <MaterialTable\n        title=\"Courses\"\n        columns={this.columns}\n        data={this.state.data}\n        icons={icons}\n        options={{\n          pageSize: 10,\n          pageSizeOptions: [10, 25, 50, 100],\n          searchText: this.searchText\n        }}\n        style={{width: '100%'}}\n        components={{\n          Container: props => (<Paper elevation={0} {...props}></Paper>),\n          Pagination: PatchedPagination,\n        }}\n        onRowClick={(event, rowData) => {\n          console.log(rowData.courseCode);\n          const currentHash = router.location.hash;\n          console.log(currentHash);\n          const nextHash = `/courses/${rowData.courseCode}`;\n          if (currentHash !== nextHash) {\n            router.push(nextHash);\n          }\n        }}\n        onSearchChange={(searchText)=>{\n          this.searchText = searchText;\n          globalStateStore.setCourseListSearchText(searchText);\n        }}\n      />\n      // </div>\n    );\n  }\n}\n\nexport default CourseList;\n","import * as React from 'react';\n\nimport { inject, observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router';\nimport { CourseList } from 'app/components/CourseList';\n\nimport { STORE_ROUTER } from 'app/constants';\n// import {\n//   Container,\n//   CssBaseline, Paper\n// } from '@material-ui/core';\n\nexport interface CourseListPageProps extends RouteComponentProps<any> {\n}\n\nexport interface CourseListPageState {\n}\n\n@inject(STORE_ROUTER)\n@observer\nexport class CourseListPage extends React.Component<CourseListPageProps, CourseListPageState> {\n  constructor(props: CourseListPageProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <CourseList/>\n    );\n  }\n}\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  Chart,\n  // Legend,\n  Tooltip,\n  BarSeries,\n  LineSeries,\n  PieSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from '@devexpress/dx-react-chart-material-ui';\nimport {\n  Animation,\n  EventTracker,\n  HoverState,\n  // Palette,\n} from '@devexpress/dx-react-chart';\n// import {schemePastel2} from 'd3-scale-chromatic';\n\nimport {withStyles} from '@material-ui/styles';\nimport _ from 'lodash';\n\nimport {STORE_COURSES} from 'app/constants';\n// import {ScoreModel} from 'app/models/CourseModel';\n// import {CoursesStore} from 'app/stores';\nimport {ScoreData} from 'app/components/Lesson';\n\nexport interface CurveChartProps {\n  lessonClassCode: string\n  data: ScoreData[];\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n}\n\nexport interface CurveChartState {\n  hover: any;\n  tooltipTarget: any;\n  totalCount: number;\n  chartData: ScoreData[];\n}\n\nconst chartRootStyles = {\n  chart: {\n    paddingRight: '20px',\n  },\n};\n\n/*const legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n};\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1),\n  },\n});\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column',\n  },\n};*/\n\nconst colors = ['#fdca00', '#19335d', '#ffffff'];\n\nconst BarSeriesPointBase = ({index, color, ...restProps}) => {\n  color = colors[index % 2];\n  // @ts-ignore\n  return <BarSeries.Point index={index}\n                          color={color} {...restProps}/>;\n};\n\n/*const LineSeriesPathBase = ({coordinates, color, ...restProps}) => {\n  console.log(coordinates);\n  // color = colors[coordinates.arg % 2];\n  // @ts-ignore\n  return <LineSeries.Path coordinates={coordinates}\n                            color={color} {...restProps}/>;\n};*/\n\nconst PieSeriesPointBase = ({index, color, endAngle, ...restProps}) => {\n  if (index >= 2 && index % 2 == 0 && Math.abs(endAngle - Math.PI * 2) < 1e-5) {\n    color = colors[2];\n  } else {\n    color = colors[index % 2];\n  }\n  // @ts-ignore\n  return <PieSeries.Point index={index} endAngle={endAngle}\n                          color={color} {...restProps}/>;\n};\n\nconst ChartRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Chart.Root {...restProps} className={classes.chart}/>\n);\n\n/*const LegendRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Root {...restProps} className={classes.root}/>\n);\nconst LegendLabelBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Label {...restProps} className={classes.label}/>\n);\nconst LegendItemBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Item {...restProps} className={classes.item}/>\n);*/\n\n// @ts-ignore\nconst ChartRoot = withStyles(chartRootStyles, {name: 'ChartRoot'})(\n  ChartRootBase);\n\n/*// @ts-ignore\nconst LegendRoot = withStyles(legendStyles, {name: 'LegendRoot'})(\n  LegendRootBase);\n// @ts-ignore\nconst LegendLabel = withStyles(legendLabelStyles, {name: 'LegendLabel'})(\n  LegendLabelBase);\n// @ts-ignore\nconst LegendItem = withStyles(legendItemStyles, {name: 'LegendItem'})(\n  LegendItemBase);*/\n\n@inject(STORE_COURSES)\nexport class CurveChart extends React.Component<CurveChartProps, CurveChartState> {\n  constructor(props: CurveChartProps, context: any) {\n    super(props, context);\n    const chartData = CurveChart.getChartData(props.data, props.chartType,\n      props.hideUnknown, props.hideZero);\n    this.state = {\n      hover: null,\n      tooltipTarget: null,\n      totalCount: CurveChart.getTotalCount(chartData),\n      chartData: chartData,\n    };\n  }\n\n  static getTotalCount(data: ScoreData[]) {\n    return _.sumBy(data, (scoreData: ScoreData) => scoreData.count);\n  }\n\n  static getChartData(\n    data: ScoreData[], chartType: string, hideUnknown: boolean,\n    hideZero: boolean) {\n    let newData = data;\n    if (hideZero || chartType === 'pie') {\n      newData = _.filter(data, scoreData => scoreData.count != 0);\n    }\n    if (hideUnknown && newData.length > 0 && _.last(newData).grade ===\n      'Unknown') {\n      newData = _.slice(newData, 0, newData.length - 1);\n    }\n    return newData;\n  }\n\n  /*  updateChartData() {\n      this.setState({totalCount: CurveChart.getTotalCount(this.props.data)});\n    }*/\n\n  /*  componentDidMount() {\n      this.updateChartData();\n    }*/\n\n  componentDidUpdate(\n    prevProps: Readonly<CurveChartProps>,\n    prevState: Readonly<CurveChartState>, snapshot?: any) {\n    if (this.props.lessonClassCode === prevProps.lessonClassCode) {\n      return;\n    } else if (this.props.chartType === prevProps.chartType &&\n      this.props.hideUnknown === prevProps.hideUnknown &&\n      this.props.hideZero === prevProps.hideZero\n    ) {\n      return;\n    }\n    const chartData = CurveChart.getChartData(this.props.data,\n      this.props.chartType, this.props.hideUnknown, this.props.hideZero);\n    this.setState({\n      totalCount: CurveChart.getTotalCount(chartData),\n      chartData: chartData,\n    });\n  }\n\n  onChangeHover(hover) {\n    this.setState({hover});\n  }\n\n  onChangeTooltip(targetItem) {\n    this.setState({tooltipTarget: targetItem});\n  }\n\n  render() {\n    const TooltipContent = (props) => {\n      // const { targetItem, text, ...restProps } = props;\n      const {targetItem} = props;\n      const pointData = this.state.chartData[targetItem.point];\n      const percentage = Math.round(\n        pointData.count / this.state.totalCount * 10000) / 100;\n      // console.log(targetItem);\n      return (\n        <h3>\n          {pointData.grade}: {percentage}%\n          ({pointData.count}/{this.state.totalCount})\n        </h3>\n      );\n    };\n\n    let series = [];\n    if (this.props.chartType === 'bar') {\n      series = [\n        <BarSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          pointComponent={BarSeriesPointBase}\n        />,\n        // @ts-ignore\n        <ArgumentAxis key=\"argument\"/>,\n        // @ts-ignore\n        <ValueAxis key=\"value\"/>,\n      ];\n    } else if (this.props.chartType === 'line') {\n      series = [\n        <LineSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          color={colors[1]}\n        />,\n        // @ts-ignore\n        <ArgumentAxis key=\"argument\"/>,\n        // @ts-ignore\n        <ValueAxis key=\"value\"/>,\n      ];\n    } else if (this.props.chartType === 'pie') {\n      series = [\n        <PieSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          innerRadius={0.4}\n          outerRadius={0.8}\n          pointComponent={PieSeriesPointBase}\n        />,\n        // <Legend key=\"legend\"/>,\n        // <Palette scheme={schemePastel2}/>,\n      ];\n    }\n\n    return (\n      <Chart\n        data={this.state.chartData}\n        // @ts-ignore\n        rootComponent={ChartRoot}\n      >\n        {series}\n        <Title text=\"\"/>\n        <Animation/>\n        <EventTracker/>\n        <HoverState hover={this.state.hover}\n                    onHoverChange={this.onChangeHover.bind(this)}/>\n        <Tooltip\n          targetItem={this.state.tooltipTarget}\n          onTargetItemChange={this.onChangeTooltip.bind(this)}\n          contentComponent={TooltipContent}\n        />\n      </Chart>\n    );\n  }\n}\n\n{/*<Legend*/\n}\n{/*  // position=\"right\"*/\n}\n{/*  // rootComponent={LegendRoot}*/\n}\n{/*  // itemComponent={LegendItem}*/\n}\n{/*  // // @ts-ignore*/\n}\n{/*  // labelComponent={LegendLabel}*/\n}\n{/*/>*/\n}\n","import * as React from 'react';\nimport {Grid} from '@material-ui/core';\nimport {CurveChart} from 'app/components/CurveChart';\n\nexport interface ScoreData {\n  grade: string;\n  count: number;\n}\n\nexport interface LessonProps {\n  /* empty */\n  scores: ScoreData[];\n  lessonClassCode: string;\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n}\n\nexport interface LessonState {\n\n}\n\nexport class Lesson extends React.Component<LessonProps, LessonState> {\n\n  constructor(props: LessonProps, context: any) {\n    super(props, context);\n    // console.log(this.props.lessonClassCode)\n  }\n\n  /*  getColor() {\n      const colors = ['#fdca00', '#19335d'];\n      // console.log(this.props.lessonClassCode);\n      const digit = this.props.lessonClassCode.charCodeAt(\n        this.props.lessonClassCode.length - 1);\n      return colors[digit % 2];\n    }*/\n\n  render() {\n    return (\n      <Grid>\n        <CurveChart data={this.props.scores} chartType={this.props.chartType}\n                    lessonClassCode={this.props.lessonClassCode}\n                    hideUnknown={this.props.hideUnknown}\n                    hideZero={this.props.hideZero}/>\n      </Grid>\n    );\n  }\n\n}\n\n","import * as React from 'react';\nimport {inject} from 'mobx-react';\nimport {\n  FormControlLabel,\n  // Tab,\n  // Tabs,\n  // Typography,\n  RadioGroup,\n  Radio,\n  Switch,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, {Column} from 'material-table';\nimport icons from 'app/components/icons';\nimport _, {Dictionary} from 'lodash';\n\nimport {STORE_COURSES, STORE_GLOBAL_STATE} from 'app/constants';\nimport CourseModel, {LessonModel} from 'app/models/CourseModel';\nimport {CoursesStore, GlobalStateStore} from 'app/stores';\nimport {Lesson, ScoreData} from 'app/components/Lesson';\nimport {PatchedPagination} from 'app/components/PatchedPagination';\n\n// import {CurvePieChart} from 'app/components/CurvePieChart';\n\nexport interface CourseProps {\n  /* empty */\n  courseCode: string\n}\n\nexport interface CourseState {\n  course: CourseModel;\n  lessons: LessonModel[];\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n  // lessonClassCode: string | boolean;\n  // lesson: LessonModel | null;\n}\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D', 'F'];\n\n@inject(STORE_COURSES, STORE_GLOBAL_STATE)\nexport class Course extends React.Component<CourseProps, CourseState> {\n  columns: Array<Column<LessonModel>>;\n  scoreDataMap: Dictionary<ScoreData[]> = {};\n  searchText: string;\n\n  constructor(props: CourseProps, context: any) {\n    super(props, context);\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    this.searchText = globalStateStore.courseSearchText[props.courseCode] || \"\";\n    this.columns = [\n      {\n        title: 'Code', field: 'lessonClassCode',\n        cellStyle: {width: '20%', maxWidth: '20%'},\n      },\n      {\n        title: 'Term', field: 'termName',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Name', field: 'lessonClassName',\n        cellStyle: {width: '25%', maxWidth: '25%'},\n      },\n      {\n        title: 'Found', field: 'scoreNum',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Elected', field: 'studentNumStr',\n        cellStyle: {width: '10%', maxWidth: '10%'},\n      },\n      {\n        title: 'Lecturers', field: 'lecturersStr', sorting: false,\n        cellStyle: {width: '25%', maxWidth: '25%'},\n      },\n    ];\n    this.state = {\n      course: null,\n      lessons: [],\n      chartType: 'bar',\n      hideUnknown: false,\n      hideZero: false,\n    };\n  }\n\n  updateCourse() {\n    console.log(this.props.courseCode);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const course = coursesStore.coursesMap[this.props.courseCode];\n    let lessons: LessonModel[] = [];\n    course.lessons.forEach(a => {\n      if (coursesStore.lessonsMap.hasOwnProperty(a[0])) {\n        let lesson = coursesStore.lessonsMap[a[0]];\n        lesson.lecturersStr = lesson.lecturers.join(', ');\n        lesson.studentNumStr = lesson.studentNum >= 0 ?\n            lesson.studentNum.toString() : '-';\n        lessons.push(lesson);\n      }\n    });\n    this.setState({\n      course: course,\n      lessons: lessons,\n    });\n  }\n\n  ensureScoreDataMap(lessonClassCode: string) {\n    if (this.scoreDataMap.hasOwnProperty(lessonClassCode)) {\n      return this.scoreDataMap[lessonClassCode];\n    }\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    let studentNum = 0;\n    let scoreNum = 0;\n    let scoreData: ScoreData[];\n    if (coursesStore.lessonsMap.hasOwnProperty(lessonClassCode)) {\n      const lesson = coursesStore.lessonsMap[lessonClassCode];\n      studentNum = lesson.studentNum;\n    }\n    if (coursesStore.scoresMap.hasOwnProperty(lessonClassCode)) {\n      const scoreRawData = coursesStore.scoresMap[lessonClassCode];\n      const scores = scoreRawData.scores;\n      const temp = _.zip(grades, scores);\n      scoreData = _.map(temp, value => {\n        scoreNum += value[1];\n        return {grade: value[0], count: value[1]};\n      });\n    } else {\n      scoreData = _.map(grades, value => {\n        return {grade: value, count: 0};\n      });\n    }\n    if (studentNum > scoreNum) {\n      scoreData.push({grade: 'Unknown', count: studentNum - scoreNum});\n    } else {\n      scoreData.push({grade: 'Unknown', count: 0});\n    }\n    this.scoreDataMap[lessonClassCode] = scoreData;\n    return scoreData;\n  }\n\n  componentDidMount() {\n    this.updateCourse();\n  }\n\n  componentDidUpdate(\n      prevProps: Readonly<CourseProps>, prevState: Readonly<CourseState>,\n      snapshot?: any) {\n    if (this.props.courseCode !== prevProps.courseCode) {\n      this.updateCourse();\n    }\n  }\n\n  onChangeChartType(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      chartType: (event.target as HTMLInputElement).value,\n    });\n  }\n\n  onChangeHideUnknown(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      hideUnknown: event.target.checked,\n    });\n  }\n\n  onChangeHideZero(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      hideZero: event.target.checked,\n    });\n  }\n\n  render() {\n    let title = this.props.courseCode;\n    if (this.state.course) {\n      title += ' - ' + this.state.course.courseNameEn + ' - ' +\n          this.state.course.courseName;\n    }\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    return (\n        <React.Fragment>\n          <Grid container>\n            <RadioGroup value={this.state.chartType}\n                        onChange={this.onChangeChartType.bind(this)} row>\n              <FormControlLabel\n                  value=\"bar\"\n                  control={<Radio color=\"secondary\"/>}\n                  label=\"Bar\"\n                  labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                  value=\"line\"\n                  control={<Radio color=\"secondary\"/>}\n                  label=\"Line\"\n                  labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                  value=\"pie\"\n                  control={<Radio color=\"secondary\"/>}\n                  label=\"Pie\"\n                  labelPlacement=\"bottom\"\n              />\n            </RadioGroup>\n            <FormControlLabel\n                control={\n                  <Switch\n                      checked={this.state.hideUnknown}\n                      onChange={this.onChangeHideUnknown.bind(this)}\n                      color=\"secondary\"\n                  />\n                }\n                label=\"Hide Unknown\"\n            />\n            <FormControlLabel\n                control={\n                  <Switch\n                      checked={this.state.hideZero}\n                      onChange={this.onChangeHideZero.bind(this)}\n                      color=\"secondary\"\n                  />\n                }\n                label=\"Hide Zero\"\n            />\n          </Grid>\n          <MaterialTable\n              title={title}\n              columns={this.columns}\n              data={this.state.lessons}\n              icons={icons}\n              options={{\n                pageSize: 10,\n                pageSizeOptions: [10, 25, 50, 100],\n                searchText: this.searchText,\n              }}\n              style={{width: '100%'}}\n              components={{\n                Container: props => (<Paper elevation={0} {...props}></Paper>),\n                Pagination: PatchedPagination,\n              }}\n              detailPanel={rowData => {\n                const lessonClassCode = rowData.lessonClassCode;\n                const scoreData = this.ensureScoreDataMap(lessonClassCode);\n                // console.log(lessonClassCode);\n                // console.log(scoreData);\n                return (\n                    <Lesson scores={scoreData} lessonClassCode={lessonClassCode}\n                            chartType={this.state.chartType}\n                            hideUnknown={this.state.hideUnknown}\n                            hideZero={this.state.hideZero}/>\n                );\n              }}\n              onRowClick={(event, rowData, togglePanel) => togglePanel()}\n              onSearchChange={(searchText) => {\n                this.searchText = searchText;\n                globalStateStore.setCourseSearchText(this.props.courseCode, searchText);\n              }}\n          />\n        </React.Fragment>\n    );\n  }\n}\n\n// export default Course;\n\n{/*<Tabs\n            value={this.state.lessonClassCode}\n            onChange={this.handleChange.bind(this)}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {\n              this.state.course.lessons.map(lesson =>\n                <Tab key={lesson[0]} label={lesson[1]} value={lesson[0]}/>)\n            }\n          </Tabs>\n          <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n          >\n            {this.state.lesson.lecturers}\n            {typeof this.state.lessonClassCode === 'string' ?\n              <CurvePieChart lessonClassCode={this.state.lessonClassCode}/> :\n              null\n            }\n          </Typography>*/\n}\n","import * as React from 'react';\n\nimport {inject, observer} from 'mobx-react';\nimport {RouteComponentProps} from 'react-router';\nimport {Course} from 'app/components/Course';\n\nimport {STORE_COURSES} from 'app/constants';\nimport {CoursesStore} from 'app/stores/CoursesStore';\n\n// import {RouterStore} from 'app/stores';\n\nexport interface CoursePageProps extends RouteComponentProps<any> {\n}\n\nexport interface CoursePageState {\n  courseCode: string;\n  available: boolean;\n}\n\n@inject(STORE_COURSES)\n@observer\nexport class CoursePage extends React.Component<CoursePageProps, CoursePageState> {\n  constructor(props: CoursePageProps, context: any) {\n    super(props, context);\n    const {match} = this.props;\n    const courseStore = this.props[STORE_COURSES] as CoursesStore;\n    const courseCode = match.params.courseCode.toUpperCase();\n    this.state = {\n      courseCode: courseCode,\n      available: courseStore.coursesMap.hasOwnProperty(courseCode),\n    };\n  }\n\n  render() {\n    return (\n      this.state.available ?\n        <Course courseCode={this.state.courseCode}/> :\n        <div>Sorry, course {this.state.courseCode} is not available.</div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {hot} from 'react-hot-loader/root';\nimport {Router, Route, Switch} from 'react-router';\n\nimport Root from 'app/containers/Root';\nimport {Main} from 'app/containers/Main';\nimport {CourseListPage} from 'app/containers/CourseListPage';\nimport {CoursePage} from 'app/containers/CoursePage';\n\n// render react DOM\nexport const App = hot(({history}) => (\n    <Root>\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={Main}/>\n          <Route exact path=\"/courses\" component={CourseListPage}/>\n          <Route path=\"/courses/:courseCode\" component={CoursePage}/>\n        </Switch>\n      </Router>\n    </Root>\n));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react';\n\nimport {createHashHistory} from 'history';\n// import {TodoModel} from 'app/models';\nimport {createStores} from 'app/stores';\nimport {App} from 'app';\n\nimport 'typeface-roboto';\n\n// default fixtures for TodoStore\n// const defaultTodos = [\n//   new TodoModel('Use Mobx'),\n//   new TodoModel('Use React', true),\n// ];\n\n// prepare MobX stores\nconst history = createHashHistory();\nconst rootStore = createStores(history, []);\n\n// render react DOM\nReactDOM.render(\n    <Provider {...rootStore}>\n      <App history={history}/>\n    </Provider>,\n    document.getElementById('root'),\n);\n","import {History} from 'history';\nimport {TodoModel} from 'app/models';\nimport {TodoStore} from './TodoStore';\nimport {RouterStore} from './RouterStore';\nimport {CoursesStore} from './CoursesStore';\nimport {GlobalStateStore} from './GlobalStateStore';\n\nimport {\n  STORE_TODO,\n  STORE_ROUTER,\n  STORE_COURSES,\n  STORE_GLOBAL_STATE,\n} from 'app/constants';\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  const coursesStore = new CoursesStore();\n  const globalStateStore = new GlobalStateStore();\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore,\n    [STORE_COURSES]: coursesStore,\n    [STORE_GLOBAL_STATE]: globalStateStore,\n  };\n}\n"],"sourceRoot":""}