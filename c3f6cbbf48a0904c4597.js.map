{"version":3,"sources":["webpack:///./app/models/TodoModel.ts","webpack:///./app/models/CourseModel.ts","webpack:///./app/stores/TodoStore.ts","webpack:///./app/stores/RouterStore.ts","webpack:///./app/constants/todos.ts","webpack:///./app/stores/CoursesStore.ts","webpack:///./app/stores/GlobalStateStore.ts","webpack:///./app/constants/stores.ts","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/AutoTheme/index.tsx","webpack:///./app/containers/Root/index.tsx","webpack:///./app/containers/Main/index.tsx","webpack:///./app/components/icons.tsx","webpack:///./app/components/PatchedPagination/index.tsx","webpack:///./app/components/CourseList/index.tsx","webpack:///./app/containers/CourseListPage/index.tsx","webpack:///./app/components/CurveChart/index.tsx","webpack:///./app/components/Lesson/index.tsx","webpack:///./app/components/Course/index.tsx","webpack:///./app/containers/CoursePage/index.tsx","webpack:///./app/index.tsx","webpack:///./main.tsx","webpack:///./app/stores/createStore.ts"],"names":["text","completed","this","id","TodoModel","generateId","nextId","observable","fixtures","addTodo","item","todos","push","editTodo","data","map","todo","deleteTodo","filter","completeAll","clearCompleted","Array","computed","action","history","syncHistoryWithStore","TodoFilter","courses","coursesMap","lessonsMap","scoresMap","setCourseListSearchText","searchText","courseListSearchText","setCourseSearchText","course","courseSearchText","STORE_ROUTER","STORE_COURSES","STORE_GLOBAL_STATE","ALL","ACTIVE","COMPLETED","render","Grid","container","justifyContent","Typography","component","variant","color","gutterBottom","align","to","style","textDecoration","namespace","props","repo","spacing","type","size","className","Link","href","target","children","prefersDarkMode","useMediaQuery","theme","createTheme","palette","primary","light","main","dark","secondary","error","warning","info","success","ThemeProvider","renderDevTool","classes","Container","maxWidth","CssBaseline","Paper","mainFeaturedPostContent","RootWithStyle","withStyles","createStyles","mainFeaturedPost","backgroundColor","grey","common","white","marginBottom","padding","breakpoints","down","paddingRight","paddingLeft","Root","context","state","md","paragraph","Button","Main","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","PatchedPagination","ActionsComponent","onChangePage","onChangeRowsPerPage","tablePaginationProps","TablePagination","onPageChange","onRowsPerPageChange","subprops","actionsComponentProps","coursesStore","globalStateStore","columns","title","field","cellStyle","width","sorting","router","icons","options","pageSize","pageSizeOptions","components","elevation","Pagination","onRowClick","event","rowData","console","log","courseCode","currentHash","location","hash","nextHash","onSearchChange","CourseList","CourseListPage","colors","BarSeriesPointBase","index","restProps","PieSeriesPointBase","endAngle","Math","abs","PI","ChartRoot","chart","name","chartData","getChartData","chartType","hideUnknown","hideZero","hover","tooltipTarget","totalCount","getTotalCount","CurveChart","scoreData","count","newData","length","grade","componentDidUpdate","prevProps","prevState","snapshot","lessonClassCode","setState","onChangeHover","onChangeTooltip","targetItem","series","tickFormat","scale","tick","Number","isInteger","key","valueField","argumentField","pointComponent","showGrid","innerRadius","outerRadius","rootComponent","onHoverChange","bind","onTargetItemChange","contentComponent","pointData","point","percentage","round","scores","grades","scoreDataMap","lessons","updateCourse","forEach","a","hasOwnProperty","lesson","lecturersStr","lecturers","join","studentNumStr","studentNum","toString","ensureScoreDataMap","scoreNum","temp","value","componentDidMount","onChangeChartType","onChangeHideUnknown","checked","onChangeHideZero","courseNameEn","courseName","zIndex","RadioGroup","onChange","row","FormControlLabel","control","Radio","label","labelPlacement","Switch","detailPanel","Lesson","togglePanel","Course","match","courseStore","params","toUpperCase","available","CoursePage","App","useEffect","exact","path","rootStore","defaultTodos","todoStore","TodoStore","routerStore","RouterStore","CoursesStore","GlobalStateStore","createStores","document","getElementById"],"mappings":"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","file":"c3f6cbbf48a0904c4597.js","sourcesContent":["import { observable } from \"mobx\";\n\nexport class TodoModel {\n  readonly id: number;\n  @observable public text: string;\n  @observable public completed: boolean;\n\n  constructor(text: string, completed: boolean = false) {\n    this.id = TodoModel.generateId();\n    this.text = text;\n    this.completed = completed;\n  }\n\n  static nextId = 1;\n  static generateId() {\n    return this.nextId++;\n  }\n}\n\nexport default TodoModel;\n","import { observable } from \"mobx\";\n\nexport class ScoreModel {\n  readonly courseCode: string;\n  readonly lessonClassCode: string;\n  readonly scores: number[];\n}\n\nexport class LessonModel {\n  readonly lessonClassCode: string;\n  readonly courseCode: string;\n  readonly lessonClassName: string;\n  readonly termName: string;\n  readonly studentNum: number;\n  readonly scoreNum: number;\n  readonly lecturers: string[];\n  @observable public lecturersStr?: string;\n  @observable public studentNumStr?: string;\n}\n\nexport class CourseModel {\n  readonly courseCode: string;\n  readonly courseName: string;\n  readonly courseNameEn: string;\n  readonly lessons: Array<string[]>;\n  readonly terms: string;\n}\n\nexport default CourseModel;\n","import { observable, computed, action } from \"mobx\";\nimport { TodoModel } from \"app/models\";\n\nexport class TodoStore {\n  constructor(fixtures: TodoModel[]) {\n    this.todos = fixtures;\n  }\n\n  @observable public todos: Array<TodoModel>;\n\n  @computed\n  get activeTodos() {\n    return this.todos.filter((todo) => !todo.completed);\n  }\n\n  @computed\n  get completedTodos() {\n    return this.todos.filter((todo) => todo.completed);\n  }\n\n  @action\n  addTodo = (item: Partial<TodoModel>): void => {\n    this.todos.push(new TodoModel(item.text, item.completed));\n  };\n\n  @action\n  editTodo = (id: number, data: Partial<TodoModel>): void => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        if (typeof data.completed == \"boolean\") {\n          todo.completed = data.completed;\n        }\n        if (typeof data.text == \"string\") {\n          todo.text = data.text;\n        }\n      }\n      return todo;\n    });\n  };\n\n  @action\n  deleteTodo = (id: number): void => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n  };\n\n  @action\n  completeAll = (): void => {\n    this.todos = this.todos.map((todo) => ({ ...todo, completed: true }));\n  };\n\n  @action\n  clearCompleted = (): void => {\n    this.todos = this.todos.filter((todo) => !todo.completed);\n  };\n}\n\nexport default TodoStore;\n","import { History } from \"history\";\nimport {\n  RouterStore as BaseRouterStore,\n  syncHistoryWithStore,\n} from \"mobx-react-router\";\n\nexport class RouterStore extends BaseRouterStore {\n  constructor(history?: History) {\n    super();\n    if (history) {\n      this.history = syncHistoryWithStore(history, this);\n    }\n  }\n}\n\nexport default RouterStore;\n","export enum TodoFilter {\n  ALL = 0,\n  ACTIVE,\n  COMPLETED,\n}\n\nexport const TODO_FILTER_TYPES = [\n  TodoFilter.ALL,\n  TodoFilter.ACTIVE,\n  TodoFilter.COMPLETED,\n];\n\nexport const TODO_FILTER_TITLES = {\n  [TodoFilter.ALL]: \"All\",\n  [TodoFilter.ACTIVE]: \"Active\",\n  [TodoFilter.COMPLETED]: \"Completed\",\n};\n\nexport const TODO_FILTER_LOCATION_HASH = {\n  [TodoFilter.ALL]: \"#\",\n  [TodoFilter.ACTIVE]: \"#active\",\n  [TodoFilter.COMPLETED]: \"#completed\",\n};\n","import { observable } from \"mobx\";\nimport _ from \"lodash\";\n\nimport { CourseModel, LessonModel, ScoreModel } from \"app/models\";\n\nimport courses from \"ji-grade-analysis-data/courses.json\";\nimport lessons from \"ji-grade-analysis-data/lessons.json\";\nimport scores from \"ji-grade-analysis-data/scores.json\";\nimport { Dictionary } from \"lodash\";\n\nexport class CoursesStore {\n  @observable public courses: Array<CourseModel>;\n  @observable public coursesMap: Dictionary<CourseModel>;\n  @observable public lessonsMap: Dictionary<LessonModel>;\n  @observable public scoresMap: Dictionary<ScoreModel>;\n\n  constructor() {\n    this.courses = courses;\n    this.coursesMap = _.keyBy(courses, \"courseCode\");\n    this.lessonsMap = _.keyBy(lessons, \"lessonClassCode\");\n    this.scoresMap = _.keyBy(scores, \"lessonClassCode\");\n    /*scores.forEach(score => {\n      const courseCode = score.courseCode;\n      if (this.coursesMap.hasOwnProperty(courseCode)) {\n        if (!this.coursesMap[courseCode].hasOwnProperty('sections')) {\n          this.coursesMap[courseCode].sections = [];\n        }\n        this.coursesMap[courseCode].sections.push(score);\n        console.log(score, this.coursesMap[courseCode].sections)\n      }\n    });*/\n  }\n}\n","import { observable, computed, action } from \"mobx\";\nimport { Dictionary } from \"lodash\";\n\nexport class GlobalStateStore {\n  @observable public courseListSearchText: string;\n  @observable public courseSearchText: Dictionary<string>;\n\n  constructor() {\n    this.courseListSearchText = \"\";\n    this.courseSearchText = {};\n  }\n\n  @action\n  setCourseListSearchText = (searchText: string): void => {\n    this.courseListSearchText = searchText;\n  };\n\n  @action\n  setCourseSearchText = (course: string, searchText: string): void => {\n    this.courseSearchText[course] = searchText;\n  };\n}\n","export const STORE_TODO = \"todo\";\nexport const STORE_ROUTER = \"router\";\nexport const STORE_COURSES = \"courses\";\nexport const STORE_GLOBAL_STATE = \"global_state\";\n","import * as React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { GitHubButton, GitHubButtonProvider } from 'react-github-button';\nimport 'react-github-button/assets/style.less';\n\nexport interface HeaderProps {\n  namespace: string;\n  repo: string;\n  /* empty */\n}\n\nexport interface HeaderState {\n  /* empty */\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  render() {\n    return (\n      <div>\n        <Grid container justifyContent=\"center\">\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n            color=\"inherit\"\n            gutterBottom\n            align={'center'}\n          >\n            <Link\n              to=\"/courses\"\n              style={{ textDecoration: 'none', color: 'inherit' }}\n            >\n              UM-SJTU JI Grade Analysis\n            </Link>\n          </Typography>\n        </Grid>\n        <GitHubButtonProvider\n          namespace={this.props.namespace}\n          repo={this.props.repo}\n        >\n          <Grid container justifyContent=\"flex-end\" spacing={1}>\n            <Grid item>\n              <GitHubButton type=\"stargazers\" size=\"large\" />\n            </Grid>\n            <Grid item>\n              <GitHubButton type=\"watchers\" size=\"large\" />\n            </Grid>\n            <Grid item>\n              <GitHubButton type=\"forks\" size=\"large\" />\n            </Grid>\n          </Grid>\n        </GitHubButtonProvider>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from \"react\";\nimport { Grid, Link } from \"@material-ui/core\";\nimport packageData from \"app/../../package.json\";\n\nexport interface FooterProps {}\n\nexport interface FooterState {}\n\nexport class Footer extends React.Component<FooterProps, FooterState> {\n  render() {\n    return (\n      <footer>\n        <br />\n        <Grid container justifyContent=\"space-between\">\n          <div className=\"busuanzi\">\n            <span id=\"busuanzi_container_page_pv\">\n              page view:&nbsp;\n              <span id=\"busuanzi_value_page_pv\"></span>\n            </span>\n          </div>\n          <span>\n            Version {packageData.version}, Powered by&nbsp;\n            <Link href=\"https://github.com/tc-imba\" target=\"_blank\">\n              tc-imba\n            </Link>\n            , Copyright 2019-2021\n          </span>\n        </Grid>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { FunctionComponent } from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst AutoTheme: FunctionComponent = ({ children }) => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n          primary: {\n            light: \"#a6d4fa\",\n            main: \"#90caf9\",\n            dark: \"#648dae\",\n          },\n          secondary: {\n            light: \"#f6a5c0\",\n            main: \"#f48fb1\",\n            dark: \"#aa647b\",\n          },\n          error: {\n            light: \"#e57373\",\n            main: \"#f44336\",\n            dark: \"#d32f2f\",\n          },\n          warning: {\n            light: \"#ffb74d\",\n            main: \"#ff9800\",\n            dark: \"#f57c00\",\n          },\n          info: {\n            light: \"#64b5f6\",\n            main: \"#2196f3\",\n            dark: \"#1976d2\",\n          },\n          success: {\n            light: \"#81c784\",\n            main: \"#4caf50\",\n            dark: \"#388e3c\",\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default AutoTheme;\n","import * as React from \"react\";\nimport { Container, CssBaseline, Grid, Paper } from \"@material-ui/core\";\nimport Header from \"app/components/Header\";\nimport Footer from \"app/components/Footer\";\nimport AutoTheme from \"app/components/AutoTheme\";\n\nimport {\n  withStyles,\n  createStyles,\n  WithStyles,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport { RouteComponentProps } from \"react-router\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    mainFeaturedPost: {\n      backgroundColor: theme.palette.grey[800],\n      color: theme.palette.common.white,\n      marginBottom: theme.spacing(4),\n    },\n    mainFeaturedPostContent: {\n      padding: `${theme.spacing(6)}px`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingRight: 0,\n        paddingLeft: 0,\n      },\n    },\n  });\n\nexport interface RootProps\n  extends RouteComponentProps<any>,\n    WithStyles<typeof styles> {}\n\nexport interface RootState {}\n\nclass Root extends React.Component<RootProps, RootState> {\n  renderDevTool() {\n    if (process.env.NODE_ENV !== \"production\") {\n      const DevTools = require(\"mobx-react-devtools\").default;\n      return <DevTools />;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <AutoTheme>\n        <div className=\"container\">\n          <Container maxWidth={\"lg\"}>\n            <CssBaseline />\n            <br />\n            <Paper>\n              <div className={classes.mainFeaturedPostContent}>\n                <Header namespace=\"SurviveUMJI\" repo=\"ji-grade-analysis\" />\n                <br />\n                <Grid container justifyContent=\"center\">\n                  {this.props.children}\n                </Grid>\n                <Footer />\n              </div>\n            </Paper>\n          </Container>\n          {this.renderDevTool()}\n        </div>\n      </AutoTheme>\n    );\n  }\n}\n\nconst RootWithStyle = withStyles(styles)(Root);\nexport default (props) => <RootWithStyle {...props} />;\n","import * as React from \"react\";\n\nimport { inject, observer } from \"mobx-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { STORE_ROUTER } from \"app/constants\";\nimport { Button, Grid, Typography, Link } from \"@material-ui/core\";\nimport statsData from \"ji-grade-analysis-data/stats.json\";\n\nexport interface MainProps extends RouteComponentProps<any> {}\n\nexport interface MainState {}\n\n@inject(STORE_ROUTER)\n@observer\nexport class Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Grid item md={10}>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          Analysis anonymous grades retrieved by all JI students, among the\n          courses with the same course code in different sections and terms,\n          aiming at forming a better and fairer GPA environment in JI.\n        </Typography>\n        <Typography variant=\"h5\" color=\"inherit\" paragraph>\n          <Link color=\"primary\">{statsData.scores}</Link> score data from{\" \"}\n          <Link color=\"primary\">{statsData.lessons}</Link> classes of{\" \"}\n          <Link color=\"primary\">{statsData.courses}</Link> courses have been\n          analyzed.\n        </Typography>\n        <Grid container justifyContent=\"center\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"large\"\n            component={RouterLink}\n            to=\"/courses\"\n          >\n            Start Explore\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Icons } from \"material-table\";\n\nconst icons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nexport default icons;\n","// @ts-nocheck\n\nimport { TablePagination, TablePaginationProps } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport function PatchedPagination(props: TablePaginationProps) {\n  const {\n    ActionsComponent,\n    onChangePage,\n    onChangeRowsPerPage,\n    ...tablePaginationProps\n  } = props;\n\n  // @ts-ignore\n  return (\n    <TablePagination\n      {...tablePaginationProps}\n      onPageChange={onChangePage}\n      onRowsPerPageChange={onChangeRowsPerPage}\n      ActionsComponent={(subprops) => {\n        const { onPageChange, ...actionsComponentProps } = subprops;\n        // @ts-ignore\n        return (\n          <ActionsComponent\n            {...actionsComponentProps}\n            onChangePage={onPageChange}\n          />\n        );\n      }}\n    />\n  );\n}\n\nexport default PatchedPagination;\n","import * as React from \"react\";\nimport { inject } from \"mobx-react\";\nimport {\n  // Divider,\n  // TableHead,\n  Paper,\n} from \"@material-ui/core\";\nimport MaterialTable, { Column } from \"material-table\";\n\nimport icons from \"app/components/icons\";\nimport { PatchedPagination } from \"app/components/PatchedPagination\";\n\nimport { STORE_COURSES, STORE_ROUTER, STORE_GLOBAL_STATE } from \"app/constants\";\nimport { CoursesStore, RouterStore, GlobalStateStore } from \"app/stores\";\nimport CourseModel from \"app/models/CourseModel\";\n\nexport interface CourseListProps {\n  /* empty */\n}\n\nexport interface CourseListState {\n  // columns: Array<Column<CourseModel>>;\n  data: CourseModel[];\n}\n\n@inject(STORE_COURSES, STORE_ROUTER, STORE_GLOBAL_STATE)\nexport class CourseList extends React.Component<\n  CourseListProps,\n  CourseListState\n> {\n  columns: Array<Column<CourseModel>>;\n  searchText: string;\n\n  constructor(props: CourseListProps, context: any) {\n    super(props, context);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    this.searchText = globalStateStore.courseListSearchText || \"\";\n    this.columns = [\n      {\n        title: \"Code\",\n        field: \"courseCode\",\n        cellStyle: { width: \"10%\", maxWidth: \"10%\" },\n      },\n      {\n        title: \"Name\",\n        field: \"courseNameEn\",\n        cellStyle: { width: \"35%\", maxWidth: \"35%\" },\n      },\n      {\n        title: \"Name (Chinese)\",\n        field: \"courseName\",\n        cellStyle: { width: \"35%\", maxWidth: \"35%\" },\n      },\n      { title: \"Terms\", field: \"terms\", sorting: false },\n    ];\n    this.state = {\n      data: coursesStore.courses,\n    };\n  }\n\n  render() {\n    const router = this.props[STORE_ROUTER] as RouterStore;\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    return (\n      // <div>\n      <MaterialTable\n        title=\"Courses\"\n        columns={this.columns}\n        data={this.state.data}\n        icons={icons}\n        options={{\n          pageSize: 10,\n          pageSizeOptions: [10, 25, 50, 100],\n          searchText: this.searchText,\n        }}\n        style={{ width: \"100%\" }}\n        components={{\n          Container: (props) => <Paper elevation={0} {...props}></Paper>,\n          Pagination: PatchedPagination,\n        }}\n        onRowClick={(event, rowData) => {\n          console.log(rowData.courseCode);\n          const currentHash = router.location.hash;\n          console.log(currentHash);\n          const nextHash = `/courses/${rowData.courseCode}`;\n          if (currentHash !== nextHash) {\n            router.push(nextHash);\n          }\n        }}\n        onSearchChange={(searchText) => {\n          this.searchText = searchText;\n          globalStateStore.setCourseListSearchText(searchText);\n        }}\n      />\n      // </div>\n    );\n  }\n}\n\nexport default CourseList;\n","import * as React from \"react\";\n\nimport { inject, observer } from \"mobx-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { CourseList } from \"app/components/CourseList\";\n\nimport { STORE_ROUTER } from \"app/constants\";\n// import {\n//   Container,\n//   CssBaseline, Paper\n// } from '@material-ui/core';\n\nexport interface CourseListPageProps extends RouteComponentProps<any> {}\n\nexport interface CourseListPageState {}\n\n@inject(STORE_ROUTER)\n@observer\nexport class CourseListPage extends React.Component<\n  CourseListPageProps,\n  CourseListPageState\n> {\n  constructor(props: CourseListPageProps, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  render() {\n    return <CourseList />;\n  }\n}\n","import * as React from \"react\";\nimport { inject } from \"mobx-react\";\nimport {\n  Chart,\n  // Legend,\n  Tooltip,\n  BarSeries,\n  LineSeries,\n  PieSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport {\n  Animation,\n  EventTracker,\n  HoverState,\n  // Palette,\n} from \"@devexpress/dx-react-chart\";\n// import {schemePastel2} from 'd3-scale-chromatic';\n\nimport { withStyles } from \"@material-ui/styles\";\nimport _ from \"lodash\";\n\nimport { STORE_COURSES } from \"app/constants\";\n// import {ScoreModel} from 'app/models/CourseModel';\n// import {CoursesStore} from 'app/stores';\nimport { ScoreData } from \"app/components/Lesson\";\n\nexport interface CurveChartProps {\n  lessonClassCode: string;\n  data: ScoreData[];\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n}\n\nexport interface CurveChartState {\n  hover: any;\n  tooltipTarget: any;\n  totalCount: number;\n  chartData: ScoreData[];\n}\n\nconst chartRootStyles = {\n  chart: {\n    paddingRight: \"20px\",\n  },\n};\n\n/*const legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n};\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1),\n  },\n});\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column',\n  },\n};*/\n\nconst colors = [\"#fdca00\", \"#19335d\", \"#ffffff\"];\n\nconst BarSeriesPointBase = ({ index, color, ...restProps }) => {\n  color = colors[index % 2];\n  // @ts-ignore\n  return <BarSeries.Point index={index} color={color} {...restProps} />;\n};\n\n/*const LineSeriesPathBase = ({coordinates, color, ...restProps}) => {\n  console.log(coordinates);\n  // color = colors[coordinates.arg % 2];\n  // @ts-ignore\n  return <LineSeries.Path coordinates={coordinates}\n                            color={color} {...restProps}/>;\n};*/\n\nconst PieSeriesPointBase = ({ index, color, endAngle, ...restProps }) => {\n  if (index >= 2 && index % 2 == 0 && Math.abs(endAngle - Math.PI * 2) < 1e-5) {\n    color = colors[2];\n  } else {\n    color = colors[index % 2];\n  }\n  // @ts-ignore\n  return (\n    // @ts-ignore\n    <PieSeries.Point\n      index={index}\n      endAngle={endAngle}\n      color={color}\n      {...restProps}\n    />\n  );\n};\n\nconst ChartRootBase = ({ classes, ...restProps }) => (\n  // @ts-ignore\n  <Chart.Root {...restProps} className={classes.chart} />\n);\n\n/*const LegendRootBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Root {...restProps} className={classes.root}/>\n);\nconst LegendLabelBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Label {...restProps} className={classes.label}/>\n);\nconst LegendItemBase = ({classes, ...restProps}) => (\n  // @ts-ignore\n  <Legend.Item {...restProps} className={classes.item}/>\n);*/\n\n// @ts-ignore\nconst ChartRoot = withStyles(chartRootStyles, { name: \"ChartRoot\" })(\n  ChartRootBase\n);\n\n/*// @ts-ignore\nconst LegendRoot = withStyles(legendStyles, {name: 'LegendRoot'})(\n  LegendRootBase);\n// @ts-ignore\nconst LegendLabel = withStyles(legendLabelStyles, {name: 'LegendLabel'})(\n  LegendLabelBase);\n// @ts-ignore\nconst LegendItem = withStyles(legendItemStyles, {name: 'LegendItem'})(\n  LegendItemBase);*/\n\n@inject(STORE_COURSES)\nexport class CurveChart extends React.Component<\n  CurveChartProps,\n  CurveChartState\n> {\n  constructor(props: CurveChartProps, context: any) {\n    super(props, context);\n    const chartData = CurveChart.getChartData(\n      props.data,\n      props.chartType,\n      props.hideUnknown,\n      props.hideZero\n    );\n    this.state = {\n      hover: null,\n      tooltipTarget: null,\n      totalCount: CurveChart.getTotalCount(chartData),\n      chartData: chartData,\n    };\n  }\n\n  static getTotalCount(data: ScoreData[]) {\n    return _.sumBy(data, (scoreData: ScoreData) => scoreData.count);\n  }\n\n  static getChartData(\n    data: ScoreData[],\n    chartType: string,\n    hideUnknown: boolean,\n    hideZero: boolean\n  ) {\n    let newData = data;\n    if (hideZero || chartType === \"pie\") {\n      newData = _.filter(data, (scoreData) => scoreData.count != 0);\n    }\n    if (\n      hideUnknown &&\n      newData.length > 0 &&\n      _.last(newData).grade === \"Unknown\"\n    ) {\n      newData = _.slice(newData, 0, newData.length - 1);\n    }\n    return newData;\n  }\n\n  /*  updateChartData() {\n      this.setState({totalCount: CurveChart.getTotalCount(this.props.data)});\n    }*/\n\n  /*  componentDidMount() {\n      this.updateChartData();\n    }*/\n\n  componentDidUpdate(\n    prevProps: Readonly<CurveChartProps>,\n    prevState: Readonly<CurveChartState>,\n    snapshot?: any\n  ) {\n    if (this.props.lessonClassCode === prevProps.lessonClassCode) {\n      return;\n    } else if (\n      this.props.chartType === prevProps.chartType &&\n      this.props.hideUnknown === prevProps.hideUnknown &&\n      this.props.hideZero === prevProps.hideZero\n    ) {\n      return;\n    }\n    const chartData = CurveChart.getChartData(\n      this.props.data,\n      this.props.chartType,\n      this.props.hideUnknown,\n      this.props.hideZero\n    );\n    this.setState({\n      totalCount: CurveChart.getTotalCount(chartData),\n      chartData: chartData,\n    });\n  }\n\n  onChangeHover(hover) {\n    this.setState({ hover });\n  }\n\n  onChangeTooltip(targetItem) {\n    this.setState({ tooltipTarget: targetItem });\n  }\n\n  render() {\n    const TooltipContent = (props) => {\n      // const { targetItem, text, ...restProps } = props;\n      const { targetItem } = props;\n      const pointData = this.state.chartData[targetItem.point];\n      const percentage =\n        Math.round((pointData.count / this.state.totalCount) * 10000) / 100;\n      // console.log(targetItem);\n      return (\n        <h3>\n          {pointData.grade}: {percentage}% ({pointData.count}/\n          {this.state.totalCount})\n        </h3>\n      );\n    };\n\n    let series = [];\n    const tickFormat = (scale) => (tick) => {\n      return Number.isInteger(tick) ? tick : \"\";\n    };\n\n    if (this.props.chartType === \"bar\") {\n      series = [\n        <BarSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          pointComponent={BarSeriesPointBase}\n        />,\n        // @ts-ignore\n        <ArgumentAxis key=\"argument\" />,\n        // @ts-ignore\n        <ValueAxis key=\"value\" showGrid={false} tickFormat={tickFormat} />,\n      ];\n    } else if (this.props.chartType === \"line\") {\n      series = [\n        <LineSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          color={colors[0]}\n        />,\n        // @ts-ignore\n        <ArgumentAxis key=\"argument\" />,\n        // @ts-ignore\n        <ValueAxis key=\"value\" tickFormat={tickFormat} />,\n      ];\n    } else if (this.props.chartType === \"pie\") {\n      series = [\n        <PieSeries\n          key=\"series\"\n          valueField=\"count\"\n          argumentField=\"grade\"\n          innerRadius={0.4}\n          outerRadius={0.8}\n          pointComponent={PieSeriesPointBase}\n        />,\n        // <Legend key=\"legend\"/>,\n        // <Palette scheme={schemePastel2}/>,\n      ];\n    }\n\n    return (\n      <Chart\n        data={this.state.chartData}\n        // @ts-ignore\n        rootComponent={ChartRoot}\n      >\n        {series}\n        <Title text=\"\" />\n        <Animation />\n        <EventTracker />\n        <HoverState\n          hover={this.state.hover}\n          onHoverChange={this.onChangeHover.bind(this)}\n        />\n        <Tooltip\n          targetItem={this.state.tooltipTarget}\n          onTargetItemChange={this.onChangeTooltip.bind(this)}\n          contentComponent={TooltipContent}\n        />\n      </Chart>\n    );\n  }\n}\n\n{\n  /*<Legend*/\n}\n{\n  /*  // position=\"right\"*/\n}\n{\n  /*  // rootComponent={LegendRoot}*/\n}\n{\n  /*  // itemComponent={LegendItem}*/\n}\n{\n  /*  // // @ts-ignore*/\n}\n{\n  /*  // labelComponent={LegendLabel}*/\n}\n{\n  /*/>*/\n}\n","import * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CurveChart } from \"app/components/CurveChart\";\n\nexport interface ScoreData {\n  grade: string;\n  count: number;\n}\n\nexport interface LessonProps {\n  /* empty */\n  scores: ScoreData[];\n  lessonClassCode: string;\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n}\n\nexport interface LessonState {}\n\nexport class Lesson extends React.Component<LessonProps, LessonState> {\n  constructor(props: LessonProps, context: any) {\n    super(props, context);\n    // console.log(this.props.lessonClassCode)\n  }\n\n  /*  getColor() {\n      const colors = ['#fdca00', '#19335d'];\n      // console.log(this.props.lessonClassCode);\n      const digit = this.props.lessonClassCode.charCodeAt(\n        this.props.lessonClassCode.length - 1);\n      return colors[digit % 2];\n    }*/\n\n  render() {\n    return (\n      <Grid>\n        <CurveChart\n          data={this.props.scores}\n          chartType={this.props.chartType}\n          lessonClassCode={this.props.lessonClassCode}\n          hideUnknown={this.props.hideUnknown}\n          hideZero={this.props.hideZero}\n        />\n      </Grid>\n    );\n  }\n}\n","import * as React from 'react';\nimport { inject } from 'mobx-react';\nimport {\n  FormControlLabel,\n  // Tab,\n  // Tabs,\n  // Typography,\n  RadioGroup,\n  Radio,\n  Switch,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport MaterialTable, { Column } from 'material-table';\nimport icons from 'app/components/icons';\nimport _, { Dictionary } from 'lodash';\n\nimport { STORE_COURSES, STORE_GLOBAL_STATE } from 'app/constants';\nimport CourseModel, { LessonModel } from 'app/models/CourseModel';\nimport { CoursesStore, GlobalStateStore } from 'app/stores';\nimport { Lesson, ScoreData } from 'app/components/Lesson';\nimport { PatchedPagination } from 'app/components/PatchedPagination';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\n// import {CurvePieChart} from 'app/components/CurvePieChart';\n\nexport interface CourseProps {\n  /* empty */\n  courseCode: string;\n}\n\nexport interface CourseState {\n  course: CourseModel;\n  lessons: LessonModel[];\n  chartType: string;\n  hideUnknown: boolean;\n  hideZero: boolean;\n  // lessonClassCode: string | boolean;\n  // lesson: LessonModel | null;\n}\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D', 'F'];\n\n@inject(STORE_COURSES, STORE_GLOBAL_STATE)\nexport class Course extends React.Component<CourseProps, CourseState> {\n  columns: Array<Column<LessonModel>>;\n  scoreDataMap: Dictionary<ScoreData[]> = {};\n  searchText: string;\n\n  constructor(props: CourseProps, context: any) {\n    super(props, context);\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    this.searchText = globalStateStore.courseSearchText[props.courseCode] || '';\n    this.columns = [\n      {\n        title: 'Code',\n        field: 'lessonClassCode',\n        cellStyle: { width: '20%', maxWidth: '20%' },\n      },\n      {\n        title: 'Term',\n        field: 'termName',\n        cellStyle: { width: '10%', maxWidth: '10%' },\n      },\n      {\n        title: 'Name',\n        field: 'lessonClassName',\n        cellStyle: { width: '25%', maxWidth: '25%' },\n      },\n      {\n        title: 'Found',\n        field: 'scoreNum',\n        cellStyle: { width: '10%', maxWidth: '10%' },\n      },\n      {\n        title: 'Elected',\n        field: 'studentNumStr',\n        cellStyle: { width: '10%', maxWidth: '10%' },\n      },\n      {\n        title: 'Lecturers',\n        field: 'lecturersStr',\n        sorting: false,\n        cellStyle: { width: '25%', maxWidth: '25%' },\n      },\n    ];\n    this.state = {\n      course: null,\n      lessons: [],\n      chartType: 'bar',\n      hideUnknown: false,\n      hideZero: false,\n    };\n  }\n\n  updateCourse() {\n    console.log(this.props.courseCode);\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    const course = coursesStore.coursesMap[this.props.courseCode];\n    let lessons: LessonModel[] = [];\n    course.lessons.forEach((a) => {\n      if (coursesStore.lessonsMap.hasOwnProperty(a[0])) {\n        let lesson = coursesStore.lessonsMap[a[0]];\n        lesson.lecturersStr = lesson.lecturers.join(', ');\n        lesson.studentNumStr =\n          lesson.studentNum >= 0 ? lesson.studentNum.toString() : '-';\n        lessons.push(lesson);\n      }\n    });\n    this.setState({\n      course: course,\n      lessons: lessons,\n    });\n  }\n\n  ensureScoreDataMap(lessonClassCode: string) {\n    if (this.scoreDataMap.hasOwnProperty(lessonClassCode)) {\n      return this.scoreDataMap[lessonClassCode];\n    }\n    const coursesStore = this.props[STORE_COURSES] as CoursesStore;\n    let studentNum = 0;\n    let scoreNum = 0;\n    let scoreData: ScoreData[];\n    if (coursesStore.lessonsMap.hasOwnProperty(lessonClassCode)) {\n      const lesson = coursesStore.lessonsMap[lessonClassCode];\n      studentNum = lesson.studentNum;\n    }\n    if (coursesStore.scoresMap.hasOwnProperty(lessonClassCode)) {\n      const scoreRawData = coursesStore.scoresMap[lessonClassCode];\n      const scores = scoreRawData.scores;\n      const temp = _.zip(grades, scores);\n      scoreData = _.map(temp, (value) => {\n        scoreNum += value[1];\n        return { grade: value[0], count: value[1] };\n      });\n    } else {\n      scoreData = _.map(grades, (value) => {\n        return { grade: value, count: 0 };\n      });\n    }\n    if (studentNum > scoreNum) {\n      scoreData.push({ grade: 'Unknown', count: studentNum - scoreNum });\n    } else {\n      scoreData.push({ grade: 'Unknown', count: 0 });\n    }\n    this.scoreDataMap[lessonClassCode] = scoreData;\n    return scoreData;\n  }\n\n  componentDidMount() {\n    this.updateCourse();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CourseProps>,\n    prevState: Readonly<CourseState>,\n    snapshot?: any\n  ) {\n    if (this.props.courseCode !== prevProps.courseCode) {\n      this.updateCourse();\n    }\n  }\n\n  onChangeChartType(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      chartType: (event.target as HTMLInputElement).value,\n    });\n  }\n\n  onChangeHideUnknown(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      hideUnknown: event.target.checked,\n    });\n  }\n\n  onChangeHideZero(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      hideZero: event.target.checked,\n    });\n  }\n\n  render() {\n    let title = this.props.courseCode;\n    if (this.state.course) {\n      title +=\n        ' - ' +\n        this.state.course.courseNameEn +\n        ' - ' +\n        this.state.course.courseName;\n    }\n    const globalStateStore = this.props[STORE_GLOBAL_STATE] as GlobalStateStore;\n    return (\n      <React.Fragment>\n        <StickyContainer>\n          <Sticky>\n            {({ style }) => (\n              // TODO: better way to make it opaque\n              <div className=\"MuiPaper-root\" style={{ zIndex: 64, ...style }}>\n                <Grid container>\n                  <RadioGroup\n                    value={this.state.chartType}\n                    onChange={this.onChangeChartType.bind(this)}\n                    row\n                  >\n                    <FormControlLabel\n                      value=\"bar\"\n                      control={<Radio color=\"secondary\" />}\n                      label=\"Bar\"\n                      labelPlacement=\"bottom\"\n                    />\n                    <FormControlLabel\n                      value=\"line\"\n                      control={<Radio color=\"secondary\" />}\n                      label=\"Line\"\n                      labelPlacement=\"bottom\"\n                    />\n                    <FormControlLabel\n                      value=\"pie\"\n                      control={<Radio color=\"secondary\" />}\n                      label=\"Pie\"\n                      labelPlacement=\"bottom\"\n                    />\n                  </RadioGroup>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.hideUnknown}\n                        onChange={this.onChangeHideUnknown.bind(this)}\n                        color=\"secondary\"\n                      />\n                    }\n                    label=\"Hide Unknown\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.hideZero}\n                        onChange={this.onChangeHideZero.bind(this)}\n                        color=\"secondary\"\n                      />\n                    }\n                    label=\"Hide Zero\"\n                  />\n                </Grid>\n              </div>\n            )}\n          </Sticky>\n          <MaterialTable\n            title={title}\n            columns={this.columns}\n            data={this.state.lessons}\n            icons={icons}\n            options={{\n              pageSize: 10,\n              pageSizeOptions: [10, 25, 50, 100],\n              searchText: this.searchText,\n            }}\n            style={{ width: '100%' }}\n            components={{\n              Container: (props) => <Paper elevation={0} {...props}></Paper>,\n              Pagination: PatchedPagination,\n            }}\n            detailPanel={(rowData) => {\n              const lessonClassCode = rowData.lessonClassCode;\n              const scoreData = this.ensureScoreDataMap(lessonClassCode);\n              // console.log(lessonClassCode);\n              // console.log(scoreData);\n              return (\n                <Lesson\n                  scores={scoreData}\n                  lessonClassCode={lessonClassCode}\n                  chartType={this.state.chartType}\n                  hideUnknown={this.state.hideUnknown}\n                  hideZero={this.state.hideZero}\n                />\n              );\n            }}\n            onRowClick={(event, rowData, togglePanel) => togglePanel()}\n            onSearchChange={(searchText) => {\n              this.searchText = searchText;\n              globalStateStore.setCourseSearchText(\n                this.props.courseCode,\n                searchText\n              );\n            }}\n          />\n        </StickyContainer>\n      </React.Fragment>\n    );\n  }\n}\n\n// export default Course;\n\n{\n  /*<Tabs\n            value={this.state.lessonClassCode}\n            onChange={this.handleChange.bind(this)}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {\n              this.state.course.lessons.map(lesson =>\n                <Tab key={lesson[0]} label={lesson[1]} value={lesson[0]}/>)\n            }\n          </Tabs>\n          <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n          >\n            {this.state.lesson.lecturers}\n            {typeof this.state.lessonClassCode === 'string' ?\n              <CurvePieChart lessonClassCode={this.state.lessonClassCode}/> :\n              null\n            }\n          </Typography>*/\n}\n","import * as React from \"react\";\n\nimport { inject, observer } from \"mobx-react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Course } from \"app/components/Course\";\n\nimport { STORE_COURSES } from \"app/constants\";\nimport { CoursesStore } from \"app/stores/CoursesStore\";\n\n// import {RouterStore} from 'app/stores';\n\nexport interface CoursePageProps extends RouteComponentProps<any> {}\n\nexport interface CoursePageState {\n  courseCode: string;\n  available: boolean;\n}\n\n@inject(STORE_COURSES)\n@observer\nexport class CoursePage extends React.Component<\n  CoursePageProps,\n  CoursePageState\n> {\n  constructor(props: CoursePageProps, context: any) {\n    super(props, context);\n    const { match } = this.props;\n    const courseStore = this.props[STORE_COURSES] as CoursesStore;\n    const courseCode = match.params.courseCode.toUpperCase();\n    this.state = {\n      courseCode: courseCode,\n      available: courseStore.coursesMap.hasOwnProperty(courseCode),\n    };\n  }\n\n  render() {\n    return this.state.available ? (\n      <Course courseCode={this.state.courseCode} />\n    ) : (\n      <div>Sorry, course {this.state.courseCode} is not available.</div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {hot} from 'react-hot-loader/root';\nimport {Router, Route, Switch} from 'react-router';\nimport statistics from 'busuanzi-statistics';\n\nimport Root from 'app/containers/Root';\nimport {Main} from 'app/containers/Main';\nimport {CourseListPage} from 'app/containers/CourseListPage';\nimport {CoursePage} from 'app/containers/CoursePage';\n\n// render react DOM\nexport const App = hot(({history}) => {\n  useEffect(() => {\n    // do not delete this line\n    console.log(statistics);\n    // Anything in here is fired on component mount.\n    // setTimeout(statistics, 0);\n    /*const handleLocationChange = (location) => {\n      // Do something with the location\n      // console.log(location);\n      // console.log(\"busuanzi\")\n      statistics();\n    };\n    const unsubscribeFromHistory = history.listen(handleLocationChange);\n    handleLocationChange(history.location);*/\n    return () => {\n      // Anything in here is fired on component unmount.\n      // if (unsubscribeFromHistory) unsubscribeFromHistory();\n    };\n  }, []);\n  return (\n      <Router history={history}>\n        <Root>\n          <Switch>\n            <Route exact path=\"/\" component={Main}/>\n            <Route exact path=\"/courses\" component={CourseListPage}/>\n            <Route path=\"/courses/:courseCode\" component={CoursePage}/>\n          </Switch>\n        </Root>\n      </Router>\n  );\n});\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport { createHashHistory } from \"history\";\n// import {TodoModel} from 'app/models';\nimport { createStores } from \"app/stores\";\nimport { App } from \"app\";\n\nimport \"typeface-roboto\";\n\n// default fixtures for TodoStore\n// const defaultTodos = [\n//   new TodoModel('Use Mobx'),\n//   new TodoModel('Use React', true),\n// ];\n\n// prepare MobX stores\nconst history = createHashHistory();\nconst rootStore = createStores(history, []);\n\n// render react DOM\nReactDOM.render(\n  <Provider {...rootStore}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { History } from \"history\";\nimport { TodoModel } from \"app/models\";\nimport { TodoStore } from \"./TodoStore\";\nimport { RouterStore } from \"./RouterStore\";\nimport { CoursesStore } from \"./CoursesStore\";\nimport { GlobalStateStore } from \"./GlobalStateStore\";\n\nimport {\n  STORE_TODO,\n  STORE_ROUTER,\n  STORE_COURSES,\n  STORE_GLOBAL_STATE,\n} from \"app/constants\";\n\nexport function createStores(history: History, defaultTodos?: TodoModel[]) {\n  const todoStore = new TodoStore(defaultTodos);\n  const routerStore = new RouterStore(history);\n  const coursesStore = new CoursesStore();\n  const globalStateStore = new GlobalStateStore();\n  return {\n    [STORE_TODO]: todoStore,\n    [STORE_ROUTER]: routerStore,\n    [STORE_COURSES]: coursesStore,\n    [STORE_GLOBAL_STATE]: globalStateStore,\n  };\n}\n"],"sourceRoot":""}